[gd_resource type="ShaderMaterial" load_steps=40 format=2]

[ext_resource path="res://Assets/grass.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeColorConstant" id=2]
constant = Color( 0.279299, 0.554688, 0.136505, 1 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]
output_port_for_preview = 1

[sub_resource type="VisualShaderNodeVectorOp" id=4]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=5]
output_port_for_preview = 1
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=6]
constant = Color( 0.0370092, 0.109375, 0.0123901, 1 )

[sub_resource type="VisualShaderNodeVectorInterp" id=7]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 15

[sub_resource type="VisualShaderNodeInput" id=9]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=10]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=11]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "modelview"

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "world"

[sub_resource type="VisualShaderNodeTransformMult" id=15]

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=17]

[sub_resource type="VisualShaderNodeVectorOp" id=18]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.1, 0.1, 0.1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=19]

[sub_resource type="VisualShaderNodeVectorCompose" id=20]

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "world"

[sub_resource type="VisualShaderNodeTransformVecMult" id=22]

[sub_resource type="VisualShaderNodeTransformFunc" id=23]

[sub_resource type="VisualShaderNodeVectorOp" id=24]

[sub_resource type="VisualShaderNodeVec3Constant" id=25]
constant = Vector3( 0, 1, 0 )

[sub_resource type="VisualShaderNodeVectorInterp" id=26]

[sub_resource type="VisualShaderNodeInput" id=27]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=28]

[sub_resource type="VisualShaderNodeScalarFunc" id=29]
function = 31

[sub_resource type="VisualShaderNodeScalarUniform" id=30]
uniform_name = "resolution"

[sub_resource type="VisualShaderNodeVectorCompose" id=31]

[sub_resource type="VisualShaderNodeScalarUniform" id=32]
uniform_name = "windSepeed"

[sub_resource type="VisualShaderNodeScalarUniform" id=33]
uniform_name = "windStregth"

[sub_resource type="OpenSimplexNoise" id=34]

[sub_resource type="NoiseTexture" id=35]
seamless = true
noise = SubResource( 34 )

[sub_resource type="VisualShaderNodeTexture" id=36]
texture = SubResource( 35 )

[sub_resource type="VisualShaderNodeVectorOp" id=37]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.6, 0.6, 0.6 ) ]
operator = 2

[sub_resource type="VisualShader" id=38]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, specular_toon, skip_vertex_transform;

uniform float resolution;
uniform float windSepeed;
uniform sampler2D tex_vtx_6;
uniform float windStregth;
uniform sampler2D tex_frg_5;



void vertex() {
// Input:43
	mat4 n_out43p0 = WORLD_MATRIX;

// TransformFunc:47
	mat4 n_out47p0 = inverse(n_out43p0);

// Input:16
	mat4 n_out16p0 = WORLD_MATRIX;

// Input:15
	mat4 n_out15p0 = MODELVIEW_MATRIX;

// TransformMult:17
	mat4 n_out17p0 = n_out16p0 * n_out15p0;

// Input:19
	vec3 n_out19p0 = VERTEX;

// TransformVectorMult:20
	vec3 n_out20p0 = (n_out17p0 * vec4(n_out19p0, 1.0)).xyz;

// ScalarUniform:54
	float n_out54p0 = resolution;

// VectorOp:8
	vec3 n_out8p0 = n_out20p0 * vec3(n_out54p0);

// ScalarUniform:56
	float n_out56p0 = windSepeed;

// VectorCompose:55
	float n_in55p1 = 0.00000;
	float n_in55p2 = 0.00000;
	vec3 n_out55p0 = vec3(n_out56p0, n_in55p1, n_in55p2);

// Input:10
	float n_out10p0 = TIME;

// VectorOp:13
	vec3 n_out13p0 = n_out55p0 * vec3(n_out10p0);

// VectorOp:11
	vec3 n_out11p0 = n_out8p0 + n_out13p0;

// Texture:6
	vec4 tex_vtx_6_read = texture(tex_vtx_6, n_out11p0.xy);
	vec3 n_out6p0 = tex_vtx_6_read.rgb;
	float n_out6p1 = tex_vtx_6_read.a;

// VectorOp:12
	vec3 n_in12p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out12p0 = n_out6p0 - n_in12p1;

// ScalarUniform:57
	float n_out57p0 = windStregth;

// VectorOp:21
	vec3 n_out21p0 = n_out12p0 * vec3(n_out57p0);

// VectorDecompose:22
	float n_out22p0 = n_out20p0.x;
	float n_out22p1 = n_out20p0.y;
	float n_out22p2 = n_out20p0.z;

// VectorOp:48
	vec3 n_out48p0 = n_out21p0 + vec3(n_out22p0);

// VectorCompose:24
	vec3 n_out24p0 = vec3(dot(n_out48p0, vec3(0.333333, 0.333333, 0.333333)), n_out22p1, n_out22p2);

// Input:51
	vec3 n_out51p0 = vec3(UV, 0.0);

// VectorDecompose:52
	float n_out52p0 = n_out51p0.x;
	float n_out52p1 = n_out51p0.y;
	float n_out52p2 = n_out51p0.z;

// ScalarFunc:53
	float n_out53p0 = 1.0 - n_out52p1;

// VectorMix:50
	vec3 n_out50p0 = mix(n_out20p0, n_out24p0, vec3(n_out53p0));

// TransformVectorMult:46
	vec3 n_out46p0 = (n_out47p0 * vec4(n_out50p0, 1.0)).xyz;

// Vector:5
	vec3 n_out5p0 = vec3(0.000000, 1.000000, 0.000000);

// Output:0
	VERTEX = n_out46p0;
	NORMAL = n_out5p0;

}

void fragment() {
// Color:16
	vec3 n_out16p0 = vec3(0.279299, 0.554688, 0.136505);
	float n_out16p1 = 1.000000;

// Color:55
	vec3 n_out55p0 = vec3(0.037009, 0.109375, 0.012390);
	float n_out55p1 = 1.000000;

// Input:13
	vec3 n_out13p0 = vec3(UV, 0.0);

// VectorDecompose:23
	float n_out23p0 = n_out13p0.x;
	float n_out23p1 = n_out13p0.y;
	float n_out23p2 = n_out13p0.z;

// VectorMix:57
	vec3 n_out57p0 = mix(n_out16p0, n_out55p0, vec3(n_out23p1));

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out13p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// VectorOp:4
	vec3 n_out4p0 = n_out57p0 * n_out5p0;

// ScalarFunc:66
	float n_out66p0 = round(n_out5p1);

// Output:0
	ALBEDO = n_out4p0;
	ALPHA = n_out66p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
modes/depth_draw = 3
modes/specular = 3
flags/skip_vertex_transform = true
nodes/vertex/0/position = Vector2( 1820, -720 )
nodes/vertex/5/node = SubResource( 25 )
nodes/vertex/5/position = Vector2( 1220, -600 )
nodes/vertex/6/node = SubResource( 36 )
nodes/vertex/6/position = Vector2( -400, -420 )
nodes/vertex/8/node = SubResource( 37 )
nodes/vertex/8/position = Vector2( -760, -540 )
nodes/vertex/10/node = SubResource( 9 )
nodes/vertex/10/position = Vector2( -1060, -180 )
nodes/vertex/11/node = SubResource( 10 )
nodes/vertex/11/position = Vector2( -580, -400 )
nodes/vertex/12/node = SubResource( 11 )
nodes/vertex/12/position = Vector2( -200, -420 )
nodes/vertex/13/node = SubResource( 12 )
nodes/vertex/13/position = Vector2( -800, -320 )
nodes/vertex/15/node = SubResource( 13 )
nodes/vertex/15/position = Vector2( -1556.4, -754 )
nodes/vertex/16/node = SubResource( 14 )
nodes/vertex/16/position = Vector2( -1516.4, -834 )
nodes/vertex/17/node = SubResource( 15 )
nodes/vertex/17/position = Vector2( -1336.4, -834 )
nodes/vertex/19/node = SubResource( 16 )
nodes/vertex/19/position = Vector2( -1316.4, -714 )
nodes/vertex/20/node = SubResource( 17 )
nodes/vertex/20/position = Vector2( -1062, -798.4 )
nodes/vertex/21/node = SubResource( 18 )
nodes/vertex/21/position = Vector2( 20, -400 )
nodes/vertex/22/node = SubResource( 19 )
nodes/vertex/22/position = Vector2( -60, -620 )
nodes/vertex/24/node = SubResource( 20 )
nodes/vertex/24/position = Vector2( 440, -620 )
nodes/vertex/43/node = SubResource( 21 )
nodes/vertex/43/position = Vector2( 940, -840 )
nodes/vertex/46/node = SubResource( 22 )
nodes/vertex/46/position = Vector2( 1260, -740 )
nodes/vertex/47/node = SubResource( 23 )
nodes/vertex/47/position = Vector2( 1080, -840 )
nodes/vertex/48/node = SubResource( 24 )
nodes/vertex/48/position = Vector2( 220, -460 )
nodes/vertex/50/node = SubResource( 26 )
nodes/vertex/50/position = Vector2( 660, -760 )
nodes/vertex/51/node = SubResource( 27 )
nodes/vertex/51/position = Vector2( -40, -900 )
nodes/vertex/52/node = SubResource( 28 )
nodes/vertex/52/position = Vector2( 140, -900 )
nodes/vertex/53/node = SubResource( 29 )
nodes/vertex/53/position = Vector2( 400, -880 )
nodes/vertex/54/node = SubResource( 30 )
nodes/vertex/54/position = Vector2( -1059.6, -497.6 )
nodes/vertex/55/node = SubResource( 31 )
nodes/vertex/55/position = Vector2( -1080, -320 )
nodes/vertex/56/node = SubResource( 32 )
nodes/vertex/56/position = Vector2( -1315, -327.5 )
nodes/vertex/57/node = SubResource( 33 )
nodes/vertex/57/position = Vector2( -200, -480 )
nodes/vertex/connections = PoolIntArray( 11, 0, 6, 0, 13, 0, 11, 1, 6, 0, 12, 0, 8, 0, 11, 0, 19, 0, 20, 1, 17, 0, 20, 0, 20, 0, 8, 0, 12, 0, 21, 0, 16, 0, 17, 0, 15, 0, 17, 1, 22, 2, 24, 2, 22, 1, 24, 1, 20, 0, 22, 0, 43, 0, 47, 0, 47, 0, 46, 0, 21, 0, 48, 0, 22, 0, 48, 1, 46, 0, 0, 0, 48, 0, 24, 0, 51, 0, 52, 0, 20, 0, 50, 0, 24, 0, 50, 1, 50, 0, 46, 1, 52, 1, 53, 0, 53, 0, 50, 2, 5, 0, 0, 1, 54, 0, 8, 1, 56, 0, 55, 0, 55, 0, 13, 0, 57, 0, 21, 1, 10, 0, 13, 1 )
nodes/fragment/0/position = Vector2( 1420, -60 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( 1080, -80 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( 560, 200 )
nodes/fragment/13/node = SubResource( 1 )
nodes/fragment/13/position = Vector2( 120, 20 )
nodes/fragment/16/node = SubResource( 2 )
nodes/fragment/16/position = Vector2( 600, -280 )
nodes/fragment/23/node = SubResource( 3 )
nodes/fragment/23/position = Vector2( 560, -40 )
nodes/fragment/55/node = SubResource( 6 )
nodes/fragment/55/position = Vector2( 600, -200 )
nodes/fragment/57/node = SubResource( 7 )
nodes/fragment/57/position = Vector2( 800, -280 )
nodes/fragment/66/node = SubResource( 8 )
nodes/fragment/66/position = Vector2( 1080, 340 )
nodes/fragment/connections = PoolIntArray( 16, 0, 57, 0, 55, 0, 57, 1, 57, 0, 4, 0, 4, 0, 0, 0, 5, 0, 4, 1, 13, 0, 23, 0, 23, 1, 57, 2, 13, 0, 5, 0, 5, 1, 66, 0, 66, 0, 0, 1 )
nodes/light/0/position = Vector2( 60, 80 )

[resource]
render_priority = 2
shader = SubResource( 38 )
shader_param/resolution = 0.6
shader_param/windSepeed = 0.05
shader_param/windStregth = 0.145
