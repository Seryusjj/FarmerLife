[gd_scene load_steps=23 format=2]

[ext_resource path="res://Scripts/MultiMeshTerrain.cs" type="Script" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=3]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=6]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=7]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=9]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=10]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeInput" id=11]
output_port_for_preview = 0
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id=12]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=13]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=14]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=15]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=16]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// Input:29
	vec3 n_out29p0 = COLOR.rgb;

// VectorDecompose:31
	float n_out31p0 = n_out29p0.x;
	float n_out31p1 = n_out29p0.y;
	float n_out31p2 = n_out29p0.z;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out31p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 14 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 15 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/19/node = SubResource( 1 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 3 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 4 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 5 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 6 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 7 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 8 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 9 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 10 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/29/node = SubResource( 11 )
nodes/fragment/29/position = Vector2( -480, -80 )
nodes/fragment/31/node = SubResource( 12 )
nodes/fragment/31/position = Vector2( -240, -100 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2, 29, 0, 31, 0, 31, 0, 26, 0 )

[sub_resource type="StreamTexture" id=17]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=18]
shader = SubResource( 16 )
shader_param/outlineColor = Color( 0.972549, 0.933333, 0.223529, 1 )
shader_param/textureColor = Color( 0.0431373, 0.588235, 0.0784314, 1 )
shader_param/TextureUniform = SubResource( 17 )

[sub_resource type="SpatialMaterial" id=19]
albedo_color = Color( 0.8, 0.8, 0.8, 1 )
metallic = 0.8

[sub_resource type="ArrayMesh" id=20]
surfaces/0 = {
"aabb": AABB( -0.5, 0, -0.5, 1.00001, 1e-05, 1.00001 ),
"array_data": PoolByteArray( 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 63, 0, 127, 0, 0, 127, 0, 0, 127, 0, 60, 0, 60, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 63, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 60, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 191, 0, 127, 0, 0, 127, 0, 0, 127, 0, 60, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 191, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 127, 0, 127, 0, 0, 129, 0, 60, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, 127, 0, 127, 0, 0, 129, 0, 60, 0, 60, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, 127, 0, 127, 0, 0, 129, 0, 0, 0, 60, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 127, 0, 127, 0, 0, 129, 0, 0, 0, 0 ),
"array_index_data": PoolByteArray( 0, 0, 1, 0, 2, 0, 2, 0, 1, 0, 3, 0, 4, 0, 5, 0, 4, 0, 4, 0, 5, 0, 5, 0, 4, 0, 5, 0, 4, 0, 4, 0, 5, 0, 5, 0, 6, 0, 7, 0, 6, 0, 6, 0, 7, 0, 7, 0, 7, 0, 4, 0, 7, 0, 7, 0, 4, 0, 4, 0, 5, 0, 6, 0, 5, 0, 5, 0, 6, 0, 6, 0, 6, 0, 7, 0, 6, 0, 6, 0, 7, 0, 7, 0, 7, 0, 4, 0, 7, 0, 7, 0, 4, 0, 4, 0, 5, 0, 6, 0, 5, 0, 5, 0, 6, 0, 6, 0 ),
"blend_shape_data": [  ],
"format": 97559,
"index_count": 54,
"material": SubResource( 19 ),
"name": "None",
"primitive": 4,
"skeleton_aabb": [  ],
"vertex_count": 8
}

[sub_resource type="MultiMesh" id=21]
color_format = 1
transform_format = 1
custom_data_format = 1
instance_count = 100
visible_instance_count = 100
mesh = SubResource( 20 )
transform_array = PoolVector3Array( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.5, 0, -4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.5, 0, -3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.5, 0, -2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.5, 0, -1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.5, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.5, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.5, 0, 1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.5, 0, 2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.5, 0, 3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.5, 0, 4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 0, -4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 0, -3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 0, -2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 0, -1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 0, 1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 0, 2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 0, 3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, 0, 4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5, 0, -4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5, 0, -3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5, 0, -2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5, 0, -1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5, 0, 1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5, 0, 2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5, 0, 3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.5, 0, 4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, -4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, -3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, -2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, -1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, 1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, 2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, 3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 0, 4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, -4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, -3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, -2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, -1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, 1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, 2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, 3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, 4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, -4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, -3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, -2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, -1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, 1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, 2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, 3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, 4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, -4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, -3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, -2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, -1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, 1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, 2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, 3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.5, 0, 4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, -4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, -3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, -2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, -1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, 1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, 2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, 3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, 4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0, -4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0, -3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0, -2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0, -1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0, 1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0, 2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0, 3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0, 4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, -4.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, -3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, -2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, -1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, 1.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, 2.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, 3.5, 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, 4.5 )
color_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
custom_data_array = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )

[node name="MultiMeshTerrain" type="MultiMeshInstance"]
material_override = SubResource( 18 )
multimesh = SubResource( 21 )
script = ExtResource( 2 )
