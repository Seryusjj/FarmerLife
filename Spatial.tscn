[gd_scene load_steps=2657 format=2]

[ext_resource path="res://Prefabs/GrassFloor.tscn" type="PackedScene" id=1]
[ext_resource path="res://Prefabs/Player.tscn" type="PackedScene" id=2]

[sub_resource type="ProceduralSky" id=1]
radiance_size = 1
sky_top_color = Color( 0.521569, 0.780392, 0.917647, 1 )
sky_horizon_color = Color( 0.054902, 0.337255, 0.545098, 1 )
ground_bottom_color = Color( 0.0705882, 0.513726, 0.0392157, 1 )
ground_horizon_color = Color( 0.0705882, 0.278431, 0.054902, 1 )
sun_color = Color( 0.94902, 0.870588, 0.541176, 1 )
sun_angle_min = 1.2
texture_size = 1

[sub_resource type="Environment" id=2]
background_mode = 2
background_sky = SubResource( 1 )
ambient_light_color = Color( 1, 1, 1, 1 )
ambient_light_energy = 1.6
ambient_light_sky_contribution = 0.75
glow_enabled = true
glow_levels/2 = true
glow_intensity = 1.15
glow_strength = 1.24
glow_blend_mode = 1
glow_bicubic_upscale = true

[sub_resource type="VisualShaderNodeScalarUniform" id=3]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=4]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=5]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=6]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=9]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=10]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=12]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=13]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=14]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=15]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=16]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=17]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 15 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 16 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 3 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 4 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 5 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 6 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 7 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 8 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 9 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 10 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 11 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 12 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 13 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=18]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 17 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 18 )

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=21]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=22]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=23]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=24]

[sub_resource type="VisualShaderNodeScalarOp" id=25]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=26]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=27]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=28]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=29]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=30]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=31]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=32]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=33]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=34]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 31 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 32 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 33 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 20 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 21 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 22 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 23 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 24 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 25 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 26 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 27 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 28 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 29 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 30 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=35]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=36]
shader = SubResource( 34 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 35 )

[sub_resource type="VisualShaderNodeScalarUniform" id=37]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=38]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=39]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=40]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=41]

[sub_resource type="VisualShaderNodeScalarOp" id=42]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=43]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=44]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=45]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=46]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=47]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=48]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=49]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=50]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=51]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 48 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 49 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 50 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 37 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 38 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 39 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 40 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 41 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 42 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 43 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 44 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 45 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 46 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 47 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=52]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=53]
shader = SubResource( 51 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 52 )

[sub_resource type="VisualShaderNodeScalarUniform" id=54]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=55]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=56]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=57]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=58]

[sub_resource type="VisualShaderNodeScalarOp" id=59]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=60]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=61]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=62]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=63]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=64]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=65]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=66]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=67]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=68]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 65 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 66 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 67 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 54 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 55 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 56 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 57 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 58 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 59 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 60 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 61 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 62 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 63 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 64 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=69]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=70]
shader = SubResource( 68 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 69 )

[sub_resource type="VisualShaderNodeScalarUniform" id=71]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=72]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=73]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=74]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=75]

[sub_resource type="VisualShaderNodeScalarOp" id=76]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=77]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=78]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=79]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=80]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=81]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=82]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=83]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=84]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=85]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 82 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 83 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 84 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 71 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 72 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 73 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 74 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 75 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 76 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 77 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 78 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 79 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 80 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 81 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=86]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=87]
shader = SubResource( 85 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 86 )

[sub_resource type="VisualShaderNodeScalarUniform" id=88]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=89]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=90]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=91]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=92]

[sub_resource type="VisualShaderNodeScalarOp" id=93]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=94]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=95]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=96]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=97]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=98]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=99]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=100]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=101]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=102]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 99 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 100 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 101 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 88 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 89 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 90 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 91 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 92 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 93 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 94 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 95 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 96 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 97 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 98 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=103]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=104]
shader = SubResource( 102 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 103 )

[sub_resource type="VisualShaderNodeScalarUniform" id=105]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=106]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=107]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=108]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=109]

[sub_resource type="VisualShaderNodeScalarOp" id=110]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=111]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=112]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=113]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=114]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=115]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=116]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=117]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=118]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=119]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 116 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 117 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 118 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 105 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 106 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 107 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 108 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 109 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 110 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 111 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 112 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 113 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 114 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 115 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=120]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=121]
shader = SubResource( 119 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 120 )

[sub_resource type="VisualShaderNodeScalarUniform" id=122]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=123]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=124]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=125]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=126]

[sub_resource type="VisualShaderNodeScalarOp" id=127]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=128]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=129]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=130]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=131]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=132]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=133]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=134]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=135]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=136]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 133 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 134 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 135 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 122 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 123 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 124 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 125 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 126 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 127 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 128 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 129 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 130 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 131 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 132 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=137]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=138]
shader = SubResource( 136 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 137 )

[sub_resource type="VisualShaderNodeScalarUniform" id=139]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=140]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=141]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=142]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=143]

[sub_resource type="VisualShaderNodeScalarOp" id=144]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=145]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=146]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=147]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=148]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=149]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=150]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=151]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=152]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=153]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 150 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 151 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 152 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 139 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 140 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 141 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 142 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 143 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 144 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 145 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 146 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 147 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 148 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 149 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=154]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=155]
shader = SubResource( 153 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 154 )

[sub_resource type="VisualShaderNodeScalarUniform" id=156]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=157]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=158]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=159]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=160]

[sub_resource type="VisualShaderNodeScalarOp" id=161]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=162]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=163]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=164]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=165]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=166]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=167]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=168]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=169]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=170]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 167 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 168 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 169 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 156 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 157 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 158 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 159 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 160 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 161 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 162 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 163 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 164 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 165 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 166 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=171]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=172]
shader = SubResource( 170 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 171 )

[sub_resource type="VisualShaderNodeScalarUniform" id=173]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=174]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=175]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=176]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=177]

[sub_resource type="VisualShaderNodeScalarOp" id=178]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=179]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=180]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=181]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=182]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=183]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=184]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=185]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=186]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=187]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 184 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 185 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 186 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 173 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 174 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 175 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 176 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 177 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 178 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 179 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 180 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 181 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 182 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 183 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=188]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=189]
shader = SubResource( 187 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 188 )

[sub_resource type="VisualShaderNodeScalarUniform" id=190]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=191]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=192]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=193]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=194]

[sub_resource type="VisualShaderNodeScalarOp" id=195]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=196]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=197]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=198]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=199]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=200]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=201]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=202]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=203]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=204]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 201 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 202 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 203 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 190 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 191 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 192 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 193 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 194 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 195 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 196 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 197 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 198 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 199 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 200 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=205]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=206]
shader = SubResource( 204 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 205 )

[sub_resource type="VisualShaderNodeScalarUniform" id=207]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=208]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=209]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=210]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=211]

[sub_resource type="VisualShaderNodeScalarOp" id=212]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=213]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=214]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=215]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=216]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=217]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=218]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=219]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=220]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=221]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 218 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 219 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 220 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 207 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 208 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 209 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 210 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 211 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 212 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 213 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 214 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 215 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 216 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 217 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=222]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=223]
shader = SubResource( 221 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 222 )

[sub_resource type="VisualShaderNodeScalarUniform" id=224]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=225]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=226]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=227]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=228]

[sub_resource type="VisualShaderNodeScalarOp" id=229]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=230]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=231]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=232]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=233]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=234]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=235]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=236]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=237]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=238]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 235 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 236 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 237 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 224 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 225 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 226 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 227 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 228 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 229 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 230 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 231 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 232 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 233 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 234 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=239]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=240]
shader = SubResource( 238 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 239 )

[sub_resource type="VisualShaderNodeScalarUniform" id=241]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=242]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=243]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=244]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=245]

[sub_resource type="VisualShaderNodeScalarOp" id=246]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=247]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=248]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=249]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=250]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=251]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=252]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=253]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=254]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=255]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 252 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 253 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 254 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 241 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 242 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 243 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 244 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 245 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 246 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 247 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 248 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 249 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 250 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 251 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=256]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=257]
shader = SubResource( 255 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 256 )

[sub_resource type="VisualShaderNodeScalarUniform" id=258]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=259]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=260]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=261]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=262]

[sub_resource type="VisualShaderNodeScalarOp" id=263]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=264]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=265]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=266]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=267]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=268]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=269]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=270]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=271]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=272]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 269 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 270 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 271 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 258 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 259 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 260 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 261 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 262 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 263 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 264 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 265 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 266 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 267 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 268 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=273]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=274]
shader = SubResource( 272 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 273 )

[sub_resource type="VisualShaderNodeScalarUniform" id=275]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=276]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=277]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=278]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=279]

[sub_resource type="VisualShaderNodeScalarOp" id=280]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=281]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=282]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=283]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=284]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=285]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=286]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=287]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=288]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=289]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 286 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 287 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 288 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 275 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 276 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 277 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 278 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 279 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 280 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 281 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 282 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 283 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 284 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 285 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=290]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=291]
shader = SubResource( 289 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 290 )

[sub_resource type="VisualShaderNodeScalarUniform" id=292]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=293]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=294]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=295]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=296]

[sub_resource type="VisualShaderNodeScalarOp" id=297]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=298]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=299]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=300]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=301]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=302]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=303]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=304]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=305]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=306]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 303 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 304 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 305 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 292 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 293 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 294 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 295 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 296 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 297 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 298 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 299 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 300 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 301 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 302 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=307]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=308]
shader = SubResource( 306 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 307 )

[sub_resource type="VisualShaderNodeScalarUniform" id=309]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=310]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=311]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=312]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=313]

[sub_resource type="VisualShaderNodeScalarOp" id=314]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=315]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=316]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=317]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=318]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=319]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=320]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=321]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=322]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=323]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 320 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 321 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 322 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 309 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 310 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 311 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 312 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 313 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 314 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 315 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 316 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 317 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 318 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 319 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=324]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=325]
shader = SubResource( 323 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 324 )

[sub_resource type="VisualShaderNodeScalarUniform" id=326]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=327]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=328]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=329]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=330]

[sub_resource type="VisualShaderNodeScalarOp" id=331]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=332]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=333]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=334]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=335]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=336]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=337]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=338]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=339]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=340]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 337 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 338 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 339 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 326 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 327 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 328 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 329 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 330 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 331 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 332 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 333 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 334 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 335 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 336 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=341]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=342]
shader = SubResource( 340 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 341 )

[sub_resource type="VisualShaderNodeScalarUniform" id=343]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=344]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=345]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=346]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=347]

[sub_resource type="VisualShaderNodeScalarOp" id=348]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=349]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=350]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=351]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=352]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=353]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=354]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=355]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=356]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=357]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 354 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 355 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 356 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 343 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 344 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 345 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 346 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 347 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 348 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 349 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 350 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 351 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 352 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 353 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=358]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=359]
shader = SubResource( 357 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 358 )

[sub_resource type="VisualShaderNodeScalarUniform" id=360]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=361]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=362]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=363]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=364]

[sub_resource type="VisualShaderNodeScalarOp" id=365]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=366]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=367]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=368]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=369]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=370]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=371]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=372]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=373]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=374]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 371 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 372 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 373 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 360 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 361 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 362 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 363 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 364 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 365 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 366 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 367 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 368 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 369 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 370 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=375]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=376]
shader = SubResource( 374 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 375 )

[sub_resource type="VisualShaderNodeScalarUniform" id=377]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=378]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=379]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=380]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=381]

[sub_resource type="VisualShaderNodeScalarOp" id=382]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=383]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=384]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=385]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=386]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=387]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=388]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=389]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=390]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=391]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 388 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 389 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 390 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 377 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 378 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 379 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 380 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 381 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 382 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 383 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 384 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 385 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 386 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 387 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=392]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=393]
shader = SubResource( 391 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 392 )

[sub_resource type="VisualShaderNodeScalarUniform" id=394]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=395]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=396]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=397]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=398]

[sub_resource type="VisualShaderNodeScalarOp" id=399]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=400]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=401]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=402]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=403]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=404]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=405]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=406]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=407]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=408]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 405 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 406 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 407 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 394 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 395 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 396 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 397 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 398 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 399 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 400 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 401 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 402 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 403 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 404 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=409]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=410]
shader = SubResource( 408 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 409 )

[sub_resource type="VisualShaderNodeScalarUniform" id=411]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=412]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=413]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=414]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=415]

[sub_resource type="VisualShaderNodeScalarOp" id=416]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=417]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=418]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=419]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=420]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=421]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=422]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=423]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=424]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=425]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 422 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 423 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 424 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 411 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 412 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 413 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 414 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 415 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 416 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 417 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 418 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 419 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 420 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 421 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=426]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=427]
shader = SubResource( 425 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 426 )

[sub_resource type="VisualShaderNodeScalarUniform" id=428]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=429]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=430]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=431]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=432]

[sub_resource type="VisualShaderNodeScalarOp" id=433]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=434]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=435]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=436]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=437]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=438]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=439]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=440]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=441]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=442]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 439 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 440 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 441 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 428 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 429 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 430 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 431 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 432 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 433 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 434 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 435 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 436 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 437 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 438 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=443]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=444]
shader = SubResource( 442 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 443 )

[sub_resource type="VisualShaderNodeScalarUniform" id=445]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=446]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=447]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=448]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=449]

[sub_resource type="VisualShaderNodeScalarOp" id=450]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=451]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=452]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=453]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=454]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=455]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=456]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=457]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=458]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=459]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 456 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 457 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 458 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 445 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 446 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 447 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 448 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 449 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 450 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 451 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 452 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 453 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 454 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 455 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=460]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=461]
shader = SubResource( 459 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 460 )

[sub_resource type="VisualShaderNodeScalarUniform" id=462]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=463]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=464]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=465]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=466]

[sub_resource type="VisualShaderNodeScalarOp" id=467]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=468]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=469]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=470]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=471]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=472]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=473]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=474]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=475]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=476]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 473 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 474 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 475 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 462 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 463 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 464 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 465 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 466 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 467 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 468 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 469 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 470 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 471 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 472 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=477]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=478]
shader = SubResource( 476 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 477 )

[sub_resource type="VisualShaderNodeScalarUniform" id=479]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=480]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=481]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=482]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=483]

[sub_resource type="VisualShaderNodeScalarOp" id=484]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=485]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=486]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=487]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=488]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=489]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=490]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=491]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=492]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=493]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 490 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 491 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 492 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 479 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 480 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 481 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 482 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 483 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 484 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 485 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 486 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 487 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 488 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 489 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=494]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=495]
shader = SubResource( 493 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 494 )

[sub_resource type="VisualShaderNodeScalarUniform" id=496]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=497]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=498]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=499]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=500]

[sub_resource type="VisualShaderNodeScalarOp" id=501]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=502]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=503]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=504]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=505]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=506]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=507]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=508]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=509]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=510]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 507 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 508 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 509 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 496 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 497 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 498 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 499 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 500 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 501 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 502 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 503 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 504 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 505 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 506 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=511]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=512]
shader = SubResource( 510 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 511 )

[sub_resource type="VisualShaderNodeScalarUniform" id=513]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=514]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=515]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=516]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=517]

[sub_resource type="VisualShaderNodeScalarOp" id=518]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=519]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=520]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=521]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=522]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=523]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=524]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=525]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=526]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=527]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 524 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 525 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 526 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 513 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 514 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 515 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 516 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 517 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 518 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 519 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 520 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 521 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 522 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 523 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=528]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=529]
shader = SubResource( 527 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 528 )

[sub_resource type="VisualShaderNodeScalarUniform" id=530]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=531]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=532]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=533]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=534]

[sub_resource type="VisualShaderNodeScalarOp" id=535]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=536]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=537]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=538]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=539]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=540]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=541]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=542]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=543]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=544]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 541 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 542 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 543 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 530 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 531 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 532 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 533 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 534 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 535 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 536 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 537 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 538 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 539 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 540 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=545]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=546]
shader = SubResource( 544 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 545 )

[sub_resource type="VisualShaderNodeScalarUniform" id=547]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=548]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=549]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=550]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=551]

[sub_resource type="VisualShaderNodeScalarOp" id=552]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=553]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=554]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=555]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=556]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=557]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=558]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=559]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=560]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=561]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 558 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 559 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 560 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 547 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 548 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 549 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 550 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 551 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 552 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 553 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 554 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 555 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 556 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 557 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=562]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=563]
shader = SubResource( 561 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 562 )

[sub_resource type="VisualShaderNodeScalarUniform" id=564]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=565]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=566]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=567]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=568]

[sub_resource type="VisualShaderNodeScalarOp" id=569]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=570]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=571]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=572]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=573]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=574]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=575]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=576]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=577]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=578]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 575 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 576 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 577 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 564 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 565 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 566 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 567 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 568 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 569 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 570 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 571 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 572 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 573 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 574 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=579]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=580]
shader = SubResource( 578 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 579 )

[sub_resource type="VisualShaderNodeScalarUniform" id=581]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=582]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=583]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=584]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=585]

[sub_resource type="VisualShaderNodeScalarOp" id=586]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=587]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=588]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=589]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=590]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=591]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=592]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=593]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=594]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=595]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 592 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 593 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 594 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 581 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 582 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 583 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 584 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 585 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 586 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 587 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 588 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 589 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 590 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 591 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=596]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=597]
shader = SubResource( 595 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 596 )

[sub_resource type="VisualShaderNodeScalarUniform" id=598]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=599]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=600]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=601]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=602]

[sub_resource type="VisualShaderNodeScalarOp" id=603]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=604]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=605]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=606]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=607]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=608]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=609]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=610]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=611]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=612]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 609 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 610 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 611 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 598 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 599 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 600 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 601 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 602 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 603 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 604 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 605 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 606 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 607 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 608 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=613]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=614]
shader = SubResource( 612 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 613 )

[sub_resource type="VisualShaderNodeScalarUniform" id=615]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=616]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=617]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=618]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=619]

[sub_resource type="VisualShaderNodeScalarOp" id=620]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=621]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=622]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=623]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=624]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=625]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=626]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=627]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=628]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=629]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 626 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 627 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 628 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 615 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 616 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 617 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 618 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 619 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 620 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 621 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 622 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 623 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 624 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 625 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=630]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=631]
shader = SubResource( 629 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 630 )

[sub_resource type="VisualShaderNodeScalarUniform" id=632]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=633]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=634]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=635]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=636]

[sub_resource type="VisualShaderNodeScalarOp" id=637]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=638]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=639]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=640]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=641]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=642]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=643]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=644]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=645]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=646]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 643 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 644 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 645 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 632 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 633 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 634 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 635 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 636 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 637 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 638 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 639 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 640 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 641 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 642 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=647]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=648]
shader = SubResource( 646 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 647 )

[sub_resource type="VisualShaderNodeScalarUniform" id=649]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=650]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=651]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=652]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=653]

[sub_resource type="VisualShaderNodeScalarOp" id=654]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=655]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=656]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=657]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=658]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=659]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=660]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=661]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=662]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=663]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 660 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 661 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 662 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 649 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 650 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 651 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 652 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 653 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 654 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 655 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 656 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 657 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 658 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 659 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=664]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=665]
shader = SubResource( 663 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 664 )

[sub_resource type="VisualShaderNodeScalarUniform" id=666]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=667]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=668]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=669]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=670]

[sub_resource type="VisualShaderNodeScalarOp" id=671]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=672]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=673]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=674]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=675]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=676]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=677]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=678]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=679]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=680]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 677 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 678 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 679 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 666 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 667 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 668 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 669 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 670 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 671 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 672 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 673 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 674 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 675 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 676 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=681]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=682]
shader = SubResource( 680 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 681 )

[sub_resource type="VisualShaderNodeScalarUniform" id=683]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=684]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=685]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=686]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=687]

[sub_resource type="VisualShaderNodeScalarOp" id=688]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=689]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=690]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=691]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=692]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=693]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=694]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=695]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=696]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=697]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 694 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 695 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 696 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 683 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 684 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 685 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 686 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 687 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 688 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 689 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 690 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 691 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 692 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 693 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=698]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=699]
shader = SubResource( 697 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 698 )

[sub_resource type="VisualShaderNodeScalarUniform" id=700]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=701]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=702]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=703]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=704]

[sub_resource type="VisualShaderNodeScalarOp" id=705]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=706]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=707]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=708]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=709]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=710]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=711]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=712]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=713]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=714]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 711 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 712 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 713 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 700 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 701 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 702 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 703 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 704 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 705 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 706 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 707 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 708 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 709 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 710 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=715]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=716]
shader = SubResource( 714 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 715 )

[sub_resource type="VisualShaderNodeScalarUniform" id=717]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=718]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=719]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=720]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=721]

[sub_resource type="VisualShaderNodeScalarOp" id=722]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=723]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=724]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=725]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=726]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=727]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=728]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=729]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=730]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=731]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 728 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 729 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 730 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 717 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 718 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 719 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 720 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 721 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 722 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 723 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 724 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 725 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 726 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 727 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=732]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=733]
shader = SubResource( 731 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 732 )

[sub_resource type="VisualShaderNodeScalarUniform" id=734]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=735]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=736]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=737]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=738]

[sub_resource type="VisualShaderNodeScalarOp" id=739]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=740]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=741]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=742]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=743]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=744]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=745]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=746]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=747]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=748]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 745 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 746 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 747 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 734 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 735 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 736 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 737 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 738 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 739 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 740 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 741 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 742 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 743 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 744 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=749]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=750]
shader = SubResource( 748 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 749 )

[sub_resource type="VisualShaderNodeScalarUniform" id=751]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=752]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=753]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=754]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=755]

[sub_resource type="VisualShaderNodeScalarOp" id=756]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=757]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=758]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=759]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=760]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=761]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=762]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=763]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=764]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=765]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 762 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 763 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 764 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 751 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 752 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 753 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 754 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 755 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 756 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 757 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 758 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 759 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 760 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 761 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=766]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=767]
shader = SubResource( 765 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 766 )

[sub_resource type="VisualShaderNodeScalarUniform" id=768]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=769]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=770]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=771]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=772]

[sub_resource type="VisualShaderNodeScalarOp" id=773]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=774]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=775]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=776]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=777]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=778]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=779]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=780]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=781]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=782]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 779 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 780 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 781 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 768 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 769 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 770 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 771 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 772 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 773 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 774 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 775 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 776 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 777 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 778 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=783]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=784]
shader = SubResource( 782 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 783 )

[sub_resource type="VisualShaderNodeScalarUniform" id=785]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=786]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=787]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=788]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=789]

[sub_resource type="VisualShaderNodeScalarOp" id=790]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=791]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=792]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=793]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=794]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=795]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=796]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=797]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=798]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=799]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 796 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 797 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 798 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 785 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 786 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 787 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 788 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 789 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 790 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 791 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 792 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 793 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 794 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 795 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=800]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=801]
shader = SubResource( 799 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 800 )

[sub_resource type="VisualShaderNodeScalarUniform" id=802]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=803]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=804]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=805]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=806]

[sub_resource type="VisualShaderNodeScalarOp" id=807]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=808]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=809]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=810]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=811]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=812]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=813]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=814]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=815]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=816]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 813 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 814 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 815 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 802 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 803 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 804 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 805 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 806 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 807 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 808 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 809 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 810 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 811 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 812 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=817]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=818]
shader = SubResource( 816 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 817 )

[sub_resource type="VisualShaderNodeScalarUniform" id=819]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=820]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=821]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=822]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=823]

[sub_resource type="VisualShaderNodeScalarOp" id=824]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=825]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=826]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=827]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=828]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=829]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=830]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=831]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=832]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=833]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 830 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 831 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 832 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 819 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 820 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 821 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 822 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 823 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 824 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 825 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 826 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 827 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 828 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 829 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=834]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=835]
shader = SubResource( 833 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 834 )

[sub_resource type="VisualShaderNodeScalarUniform" id=836]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=837]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=838]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=839]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=840]

[sub_resource type="VisualShaderNodeScalarOp" id=841]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=842]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=843]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=844]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=845]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=846]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=847]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=848]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=849]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=850]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 847 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 848 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 849 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 836 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 837 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 838 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 839 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 840 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 841 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 842 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 843 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 844 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 845 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 846 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=851]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=852]
shader = SubResource( 850 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 851 )

[sub_resource type="VisualShaderNodeScalarUniform" id=853]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=854]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=855]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=856]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=857]

[sub_resource type="VisualShaderNodeScalarOp" id=858]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=859]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=860]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=861]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=862]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=863]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=864]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=865]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=866]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=867]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 864 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 865 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 866 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 853 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 854 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 855 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 856 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 857 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 858 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 859 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 860 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 861 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 862 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 863 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=868]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=869]
shader = SubResource( 867 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 868 )

[sub_resource type="VisualShaderNodeScalarUniform" id=870]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=871]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=872]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=873]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=874]

[sub_resource type="VisualShaderNodeScalarOp" id=875]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=876]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=877]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=878]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=879]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=880]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=881]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=882]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=883]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=884]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 881 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 882 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 883 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 870 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 871 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 872 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 873 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 874 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 875 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 876 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 877 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 878 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 879 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 880 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=885]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=886]
shader = SubResource( 884 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 885 )

[sub_resource type="VisualShaderNodeScalarUniform" id=887]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=888]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=889]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=890]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=891]

[sub_resource type="VisualShaderNodeScalarOp" id=892]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=893]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=894]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=895]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=896]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=897]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=898]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=899]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=900]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=901]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 898 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 899 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 900 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 887 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 888 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 889 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 890 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 891 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 892 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 893 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 894 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 895 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 896 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 897 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=902]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=903]
shader = SubResource( 901 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 902 )

[sub_resource type="VisualShaderNodeScalarUniform" id=904]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=905]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=906]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=907]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=908]

[sub_resource type="VisualShaderNodeScalarOp" id=909]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=910]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=911]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=912]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=913]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=914]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=915]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=916]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=917]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=918]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 915 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 916 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 917 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 904 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 905 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 906 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 907 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 908 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 909 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 910 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 911 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 912 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 913 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 914 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=919]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=920]
shader = SubResource( 918 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 919 )

[sub_resource type="VisualShaderNodeScalarUniform" id=921]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=922]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=923]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=924]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=925]

[sub_resource type="VisualShaderNodeScalarOp" id=926]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=927]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=928]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=929]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=930]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=931]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=932]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=933]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=934]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=935]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 932 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 933 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 934 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 921 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 922 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 923 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 924 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 925 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 926 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 927 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 928 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 929 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 930 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 931 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=936]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=937]
shader = SubResource( 935 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 936 )

[sub_resource type="VisualShaderNodeScalarUniform" id=938]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=939]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=940]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=941]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=942]

[sub_resource type="VisualShaderNodeScalarOp" id=943]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=944]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=945]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=946]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=947]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=948]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=949]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=950]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=951]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=952]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 949 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 950 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 951 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 938 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 939 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 940 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 941 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 942 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 943 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 944 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 945 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 946 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 947 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 948 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=953]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=954]
shader = SubResource( 952 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 953 )

[sub_resource type="VisualShaderNodeScalarUniform" id=955]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=956]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=957]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=958]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=959]

[sub_resource type="VisualShaderNodeScalarOp" id=960]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=961]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=962]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=963]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=964]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=965]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=966]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=967]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=968]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=969]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 966 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 967 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 968 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 955 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 956 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 957 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 958 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 959 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 960 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 961 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 962 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 963 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 964 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 965 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=970]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=971]
shader = SubResource( 969 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 970 )

[sub_resource type="VisualShaderNodeScalarUniform" id=972]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=973]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=974]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=975]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=976]

[sub_resource type="VisualShaderNodeScalarOp" id=977]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=978]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=979]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=980]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=981]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=982]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=983]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=984]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=985]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=986]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 983 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 984 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 985 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 972 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 973 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 974 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 975 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 976 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 977 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 978 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 979 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 980 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 981 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 982 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=987]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=988]
shader = SubResource( 986 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 987 )

[sub_resource type="VisualShaderNodeScalarUniform" id=989]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=990]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=991]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=992]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=993]

[sub_resource type="VisualShaderNodeScalarOp" id=994]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=995]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=996]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=997]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=998]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=999]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1000]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1001]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1002]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1003]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1000 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1001 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1002 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 989 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 990 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 991 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 992 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 993 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 994 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 995 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 996 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 997 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 998 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 999 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1004]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1005]
shader = SubResource( 1003 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1004 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1006]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1007]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1008]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1009]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1010]

[sub_resource type="VisualShaderNodeScalarOp" id=1011]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1012]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1013]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1014]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1015]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1016]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1017]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1018]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1019]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1020]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1017 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1018 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1019 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1006 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1007 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1008 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1009 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1010 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1011 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1012 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1013 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1014 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1015 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1016 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1021]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1022]
shader = SubResource( 1020 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1021 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1023]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1024]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1025]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1026]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1027]

[sub_resource type="VisualShaderNodeScalarOp" id=1028]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1029]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1030]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1031]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1032]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1033]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1034]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1035]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1036]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1037]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1034 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1035 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1036 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1023 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1024 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1025 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1026 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1027 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1028 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1029 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1030 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1031 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1032 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1033 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1038]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1039]
shader = SubResource( 1037 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1038 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1040]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1041]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1042]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1043]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1044]

[sub_resource type="VisualShaderNodeScalarOp" id=1045]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1046]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1047]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1048]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1049]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1050]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1051]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1052]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1053]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1054]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1051 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1052 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1053 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1040 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1041 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1042 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1043 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1044 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1045 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1046 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1047 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1048 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1049 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1050 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1055]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1056]
shader = SubResource( 1054 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1055 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1057]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1058]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1059]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1060]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1061]

[sub_resource type="VisualShaderNodeScalarOp" id=1062]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1063]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1064]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1065]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1066]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1067]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1068]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1069]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1070]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1071]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1068 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1069 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1070 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1057 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1058 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1059 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1060 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1061 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1062 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1063 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1064 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1065 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1066 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1067 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1072]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1073]
shader = SubResource( 1071 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1072 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1074]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1075]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1076]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1077]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1078]

[sub_resource type="VisualShaderNodeScalarOp" id=1079]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1080]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1081]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1082]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1083]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1084]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1085]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1086]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1087]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1088]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1085 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1086 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1087 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1074 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1075 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1076 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1077 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1078 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1079 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1080 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1081 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1082 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1083 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1084 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1089]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1090]
shader = SubResource( 1088 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1089 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1091]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1092]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1093]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1094]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1095]

[sub_resource type="VisualShaderNodeScalarOp" id=1096]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1097]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1098]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1099]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1100]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1101]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1102]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1103]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1104]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1105]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1102 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1103 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1104 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1091 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1092 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1093 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1094 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1095 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1096 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1097 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1098 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1099 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1100 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1101 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1106]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1107]
shader = SubResource( 1105 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1106 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1108]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1109]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1110]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1111]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1112]

[sub_resource type="VisualShaderNodeScalarOp" id=1113]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1114]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1115]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1116]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1117]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1118]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1119]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1120]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1121]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1122]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1119 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1120 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1121 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1108 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1109 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1110 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1111 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1112 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1113 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1114 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1115 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1116 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1117 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1118 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1123]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1124]
shader = SubResource( 1122 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1123 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1125]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1126]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1127]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1128]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1129]

[sub_resource type="VisualShaderNodeScalarOp" id=1130]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1131]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1132]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1133]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1134]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1135]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1136]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1137]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1138]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1139]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1136 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1137 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1138 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1125 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1126 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1127 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1128 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1129 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1130 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1131 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1132 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1133 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1134 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1135 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1140]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1141]
shader = SubResource( 1139 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1140 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1142]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1143]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1144]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1145]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1146]

[sub_resource type="VisualShaderNodeScalarOp" id=1147]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1148]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1149]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1150]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1151]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1152]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1153]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1154]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1155]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1156]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1153 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1154 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1155 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1142 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1143 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1144 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1145 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1146 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1147 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1148 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1149 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1150 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1151 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1152 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1157]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1158]
shader = SubResource( 1156 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1157 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1159]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1160]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1161]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1162]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1163]

[sub_resource type="VisualShaderNodeScalarOp" id=1164]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1165]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1166]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1167]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1168]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1169]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1170]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1171]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1172]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1173]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1170 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1171 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1172 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1159 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1160 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1161 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1162 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1163 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1164 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1165 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1166 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1167 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1168 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1169 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1174]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1175]
shader = SubResource( 1173 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1174 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1176]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1177]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1178]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1179]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1180]

[sub_resource type="VisualShaderNodeScalarOp" id=1181]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1182]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1183]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1184]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1185]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1186]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1187]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1188]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1189]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1190]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1187 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1188 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1189 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1176 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1177 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1178 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1179 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1180 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1181 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1182 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1183 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1184 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1185 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1186 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1191]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1192]
shader = SubResource( 1190 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1191 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1193]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1194]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1195]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1196]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1197]

[sub_resource type="VisualShaderNodeScalarOp" id=1198]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1199]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1200]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1201]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1202]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1203]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1204]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1205]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1206]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1207]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1204 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1205 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1206 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1193 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1194 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1195 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1196 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1197 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1198 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1199 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1200 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1201 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1202 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1203 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1208]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1209]
shader = SubResource( 1207 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1208 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1210]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1211]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1212]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1213]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1214]

[sub_resource type="VisualShaderNodeScalarOp" id=1215]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1216]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1217]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1218]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1219]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1220]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1221]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1222]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1223]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1224]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1221 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1222 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1223 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1210 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1211 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1212 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1213 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1214 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1215 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1216 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1217 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1218 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1219 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1220 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1225]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1226]
shader = SubResource( 1224 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1225 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1227]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1228]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1229]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1230]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1231]

[sub_resource type="VisualShaderNodeScalarOp" id=1232]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1233]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1234]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1235]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1236]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1237]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1238]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1239]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1240]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1241]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1238 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1239 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1240 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1227 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1228 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1229 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1230 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1231 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1232 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1233 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1234 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1235 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1236 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1237 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1242]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1243]
shader = SubResource( 1241 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1242 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1244]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1245]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1246]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1247]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1248]

[sub_resource type="VisualShaderNodeScalarOp" id=1249]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1250]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1251]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1252]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1253]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1254]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1255]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1256]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1257]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1258]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1255 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1256 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1257 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1244 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1245 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1246 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1247 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1248 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1249 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1250 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1251 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1252 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1253 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1254 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1259]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1260]
shader = SubResource( 1258 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1259 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1261]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1262]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1263]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1264]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1265]

[sub_resource type="VisualShaderNodeScalarOp" id=1266]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1267]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1268]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1269]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1270]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1271]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1272]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1273]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1274]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1275]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1272 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1273 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1274 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1261 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1262 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1263 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1264 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1265 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1266 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1267 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1268 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1269 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1270 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1271 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1276]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1277]
shader = SubResource( 1275 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1276 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1278]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1279]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1280]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1281]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1282]

[sub_resource type="VisualShaderNodeScalarOp" id=1283]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1284]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1285]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1286]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1287]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1288]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1289]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1290]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1291]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1292]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1289 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1290 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1291 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1278 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1279 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1280 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1281 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1282 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1283 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1284 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1285 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1286 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1287 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1288 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1293]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1294]
shader = SubResource( 1292 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1293 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1295]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1296]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1297]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1298]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1299]

[sub_resource type="VisualShaderNodeScalarOp" id=1300]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1301]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1302]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1303]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1304]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1305]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1306]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1307]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1308]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1309]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1306 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1307 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1308 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1295 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1296 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1297 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1298 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1299 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1300 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1301 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1302 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1303 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1304 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1305 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1310]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1311]
shader = SubResource( 1309 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1310 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1312]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1313]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1314]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1315]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1316]

[sub_resource type="VisualShaderNodeScalarOp" id=1317]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1318]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1319]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1320]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1321]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1322]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1323]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1324]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1325]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1326]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1323 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1324 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1325 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1312 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1313 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1314 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1315 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1316 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1317 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1318 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1319 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1320 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1321 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1322 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1327]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1328]
shader = SubResource( 1326 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1327 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1329]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1330]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1331]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1332]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1333]

[sub_resource type="VisualShaderNodeScalarOp" id=1334]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1335]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1336]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1337]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1338]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1339]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1340]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1341]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1342]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1343]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1340 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1341 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1342 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1329 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1330 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1331 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1332 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1333 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1334 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1335 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1336 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1337 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1338 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1339 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1344]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1345]
shader = SubResource( 1343 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1344 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1346]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1347]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1348]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1349]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1350]

[sub_resource type="VisualShaderNodeScalarOp" id=1351]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1352]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1353]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1354]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1355]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1356]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1357]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1358]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1359]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1360]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1357 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1358 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1359 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1346 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1347 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1348 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1349 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1350 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1351 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1352 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1353 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1354 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1355 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1356 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1361]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1362]
shader = SubResource( 1360 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1361 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1363]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1364]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1365]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1366]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1367]

[sub_resource type="VisualShaderNodeScalarOp" id=1368]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1369]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1370]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1371]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1372]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1373]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1374]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1375]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1376]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1377]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1374 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1375 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1376 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1363 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1364 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1365 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1366 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1367 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1368 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1369 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1370 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1371 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1372 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1373 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1378]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1379]
shader = SubResource( 1377 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1378 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1380]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1381]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1382]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1383]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1384]

[sub_resource type="VisualShaderNodeScalarOp" id=1385]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1386]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1387]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1388]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1389]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1390]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1391]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1392]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1393]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1394]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1391 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1392 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1393 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1380 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1381 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1382 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1383 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1384 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1385 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1386 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1387 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1388 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1389 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1390 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1395]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1396]
shader = SubResource( 1394 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1395 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1397]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1398]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1399]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1400]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1401]

[sub_resource type="VisualShaderNodeScalarOp" id=1402]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1403]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1404]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1405]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1406]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1407]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1408]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1409]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1410]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1411]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1408 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1409 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1410 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1397 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1398 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1399 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1400 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1401 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1402 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1403 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1404 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1405 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1406 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1407 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1412]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1413]
shader = SubResource( 1411 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1412 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1414]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1415]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1416]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1417]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1418]

[sub_resource type="VisualShaderNodeScalarOp" id=1419]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1420]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1421]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1422]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1423]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1424]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1425]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1426]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1427]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1428]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1425 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1426 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1427 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1414 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1415 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1416 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1417 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1418 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1419 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1420 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1421 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1422 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1423 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1424 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1429]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1430]
shader = SubResource( 1428 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1429 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1431]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1432]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1433]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1434]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1435]

[sub_resource type="VisualShaderNodeScalarOp" id=1436]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1437]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1438]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1439]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1440]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1441]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1442]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1443]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1444]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1445]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1442 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1443 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1444 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1431 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1432 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1433 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1434 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1435 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1436 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1437 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1438 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1439 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1440 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1441 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1446]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1447]
shader = SubResource( 1445 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1446 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1448]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1449]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1450]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1451]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1452]

[sub_resource type="VisualShaderNodeScalarOp" id=1453]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1454]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1455]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1456]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1457]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1458]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1459]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1460]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1461]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1462]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1459 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1460 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1461 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1448 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1449 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1450 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1451 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1452 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1453 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1454 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1455 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1456 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1457 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1458 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1463]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1464]
shader = SubResource( 1462 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1463 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1465]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1466]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1467]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1468]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1469]

[sub_resource type="VisualShaderNodeScalarOp" id=1470]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1471]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1472]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1473]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1474]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1475]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1476]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1477]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1478]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1479]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1476 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1477 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1478 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1465 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1466 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1467 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1468 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1469 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1470 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1471 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1472 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1473 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1474 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1475 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1480]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1481]
shader = SubResource( 1479 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1480 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1482]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1483]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1484]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1485]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1486]

[sub_resource type="VisualShaderNodeScalarOp" id=1487]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1488]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1489]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1490]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1491]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1492]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1493]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1494]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1495]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1496]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1493 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1494 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1495 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1482 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1483 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1484 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1485 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1486 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1487 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1488 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1489 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1490 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1491 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1492 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1497]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1498]
shader = SubResource( 1496 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1497 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1499]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1500]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1501]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1502]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1503]

[sub_resource type="VisualShaderNodeScalarOp" id=1504]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1505]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1506]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1507]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1508]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1509]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1510]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1511]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1512]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1513]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1510 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1511 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1512 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1499 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1500 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1501 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1502 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1503 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1504 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1505 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1506 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1507 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1508 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1509 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1514]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1515]
shader = SubResource( 1513 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1514 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1516]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1517]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1518]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1519]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1520]

[sub_resource type="VisualShaderNodeScalarOp" id=1521]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1522]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1523]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1524]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1525]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1526]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1527]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1528]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1529]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1530]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1527 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1528 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1529 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1516 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1517 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1518 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1519 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1520 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1521 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1522 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1523 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1524 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1525 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1526 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1531]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1532]
shader = SubResource( 1530 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1531 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1533]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1534]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1535]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1536]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1537]

[sub_resource type="VisualShaderNodeScalarOp" id=1538]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1539]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1540]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1541]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1542]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1543]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1544]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1545]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1546]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1547]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1544 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1545 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1546 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1533 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1534 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1535 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1536 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1537 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1538 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1539 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1540 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1541 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1542 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1543 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1548]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1549]
shader = SubResource( 1547 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1548 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1550]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1551]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1552]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1553]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1554]

[sub_resource type="VisualShaderNodeScalarOp" id=1555]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1556]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1557]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1558]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1559]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1560]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1561]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1562]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1563]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1564]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1561 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1562 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1563 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1550 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1551 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1552 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1553 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1554 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1555 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1556 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1557 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1558 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1559 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1560 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1565]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1566]
shader = SubResource( 1564 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1565 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1567]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1568]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1569]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1570]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1571]

[sub_resource type="VisualShaderNodeScalarOp" id=1572]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1573]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1574]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1575]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1576]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1577]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1578]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1579]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1580]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1581]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1578 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1579 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1580 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1567 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1568 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1569 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1570 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1571 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1572 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1573 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1574 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1575 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1576 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1577 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1582]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1583]
shader = SubResource( 1581 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1582 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1584]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1585]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1586]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1587]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1588]

[sub_resource type="VisualShaderNodeScalarOp" id=1589]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1590]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1591]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1592]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1593]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1594]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1595]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1596]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1597]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1598]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1595 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1596 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1597 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1584 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1585 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1586 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1587 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1588 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1589 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1590 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1591 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1592 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1593 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1594 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1599]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1600]
shader = SubResource( 1598 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1599 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1601]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1602]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1603]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1604]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1605]

[sub_resource type="VisualShaderNodeScalarOp" id=1606]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1607]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1608]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1609]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1610]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1611]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1612]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1613]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1614]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1615]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1612 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1613 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1614 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1601 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1602 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1603 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1604 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1605 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1606 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1607 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1608 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1609 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1610 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1611 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1616]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1617]
shader = SubResource( 1615 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1616 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1618]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1619]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1620]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1621]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1622]

[sub_resource type="VisualShaderNodeScalarOp" id=1623]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1624]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1625]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1626]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1627]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1628]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1629]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1630]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1631]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1632]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1629 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1630 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1631 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1618 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1619 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1620 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1621 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1622 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1623 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1624 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1625 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1626 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1627 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1628 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1633]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1634]
shader = SubResource( 1632 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1633 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1635]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1636]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1637]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1638]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1639]

[sub_resource type="VisualShaderNodeScalarOp" id=1640]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1641]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1642]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1643]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1644]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1645]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1646]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1647]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1648]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1649]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1646 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1647 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1648 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1635 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1636 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1637 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1638 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1639 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1640 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1641 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1642 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1643 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1644 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1645 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1650]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1651]
shader = SubResource( 1649 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1650 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1652]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1653]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1654]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1655]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1656]

[sub_resource type="VisualShaderNodeScalarOp" id=1657]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1658]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1659]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1660]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1661]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1662]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1663]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1664]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1665]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1666]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1663 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1664 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1665 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1652 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1653 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1654 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1655 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1656 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1657 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1658 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1659 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1660 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1661 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1662 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1667]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1668]
shader = SubResource( 1666 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1667 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1669]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1670]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1671]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1672]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1673]

[sub_resource type="VisualShaderNodeScalarOp" id=1674]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1675]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1676]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1677]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1678]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1679]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1680]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1681]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1682]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1683]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1680 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1681 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1682 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1669 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1670 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1671 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1672 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1673 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1674 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1675 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1676 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1677 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1678 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1679 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1684]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1685]
shader = SubResource( 1683 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1684 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1686]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1687]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1688]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1689]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1690]

[sub_resource type="VisualShaderNodeScalarOp" id=1691]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1692]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1693]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1694]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1695]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1696]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1697]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1698]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1699]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1700]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1697 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1698 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1699 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1686 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1687 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1688 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1689 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1690 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1691 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1692 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1693 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1694 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1695 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1696 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1701]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1702]
shader = SubResource( 1700 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1701 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1703]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1704]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1705]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1706]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1707]

[sub_resource type="VisualShaderNodeScalarOp" id=1708]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1709]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1710]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1711]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1712]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1713]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1714]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1715]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1716]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1717]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1714 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1715 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1716 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1703 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1704 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1705 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1706 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1707 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1708 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1709 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1710 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1711 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1712 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1713 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1718]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1719]
shader = SubResource( 1717 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1718 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1720]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1721]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1722]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1723]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1724]

[sub_resource type="VisualShaderNodeScalarOp" id=1725]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1726]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1727]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1728]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1729]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1730]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1731]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1732]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1733]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1734]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1731 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1732 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1733 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1720 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1721 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1722 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1723 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1724 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1725 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1726 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1727 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1728 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1729 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1730 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1735]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1736]
shader = SubResource( 1734 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1735 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1737]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1738]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1739]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1740]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1741]

[sub_resource type="VisualShaderNodeScalarOp" id=1742]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1743]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1744]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1745]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1746]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1747]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1748]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1749]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1750]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1751]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1748 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1749 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1750 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1737 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1738 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1739 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1740 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1741 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1742 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1743 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1744 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1745 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1746 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1747 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1752]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1753]
shader = SubResource( 1751 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1752 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1754]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1755]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1756]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1757]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1758]

[sub_resource type="VisualShaderNodeScalarOp" id=1759]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1760]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1761]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1762]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1763]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1764]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1765]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1766]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1767]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1768]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1765 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1766 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1767 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1754 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1755 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1756 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1757 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1758 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1759 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1760 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1761 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1762 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1763 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1764 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1769]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1770]
shader = SubResource( 1768 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1769 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1771]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1772]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1773]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1774]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1775]

[sub_resource type="VisualShaderNodeScalarOp" id=1776]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1777]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1778]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1779]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1780]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1781]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1782]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1783]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1784]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1785]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1782 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1783 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1784 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1771 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1772 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1773 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1774 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1775 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1776 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1777 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1778 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1779 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1780 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1781 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1786]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1787]
shader = SubResource( 1785 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1786 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1788]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1789]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1790]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1791]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1792]

[sub_resource type="VisualShaderNodeScalarOp" id=1793]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1794]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1795]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1796]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1797]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1798]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1799]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1800]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1801]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1802]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1799 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1800 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1801 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1788 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1789 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1790 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1791 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1792 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1793 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1794 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1795 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1796 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1797 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1798 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1803]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1804]
shader = SubResource( 1802 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1803 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1805]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1806]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1807]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1808]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1809]

[sub_resource type="VisualShaderNodeScalarOp" id=1810]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1811]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1812]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1813]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1814]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1815]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1816]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1817]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1818]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1819]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1816 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1817 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1818 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1805 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1806 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1807 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1808 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1809 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1810 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1811 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1812 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1813 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1814 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1815 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1820]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1821]
shader = SubResource( 1819 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1820 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1822]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1823]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1824]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1825]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1826]

[sub_resource type="VisualShaderNodeScalarOp" id=1827]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1828]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1829]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1830]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1831]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1832]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1833]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1834]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1835]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1836]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1833 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1834 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1835 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1822 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1823 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1824 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1825 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1826 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1827 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1828 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1829 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1830 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1831 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1832 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1837]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1838]
shader = SubResource( 1836 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1837 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1839]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1840]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1841]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1842]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1843]

[sub_resource type="VisualShaderNodeScalarOp" id=1844]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1845]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1846]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1847]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1848]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1849]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1850]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1851]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1852]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1853]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1850 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1851 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1852 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1839 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1840 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1841 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1842 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1843 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1844 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1845 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1846 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1847 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1848 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1849 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1854]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1855]
shader = SubResource( 1853 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1854 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1856]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1857]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1858]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1859]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1860]

[sub_resource type="VisualShaderNodeScalarOp" id=1861]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1862]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1863]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1864]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1865]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1866]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1867]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1868]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1869]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1870]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1867 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1868 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1869 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1856 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1857 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1858 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1859 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1860 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1861 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1862 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1863 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1864 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1865 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1866 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1871]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1872]
shader = SubResource( 1870 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1871 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1873]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1874]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1875]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1876]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1877]

[sub_resource type="VisualShaderNodeScalarOp" id=1878]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1879]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1880]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1881]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1882]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1883]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1884]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1885]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1886]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1887]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1884 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1885 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1886 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1873 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1874 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1875 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1876 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1877 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1878 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1879 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1880 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1881 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1882 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1883 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1888]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1889]
shader = SubResource( 1887 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1888 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1890]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1891]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1892]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1893]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1894]

[sub_resource type="VisualShaderNodeScalarOp" id=1895]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1896]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1897]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1898]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1899]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1900]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1901]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1902]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1903]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1904]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1901 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1902 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1903 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1890 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1891 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1892 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1893 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1894 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1895 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1896 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1897 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1898 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1899 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1900 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1905]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1906]
shader = SubResource( 1904 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1905 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1907]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1908]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1909]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1910]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1911]

[sub_resource type="VisualShaderNodeScalarOp" id=1912]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1913]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1914]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1915]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1916]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1917]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1918]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1919]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1920]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1921]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1918 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1919 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1920 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1907 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1908 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1909 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1910 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1911 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1912 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1913 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1914 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1915 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1916 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1917 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1922]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1923]
shader = SubResource( 1921 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1922 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1924]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1925]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1926]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1927]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1928]

[sub_resource type="VisualShaderNodeScalarOp" id=1929]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1930]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1931]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1932]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1933]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1934]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1935]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1936]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1937]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1938]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1935 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1936 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1937 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1924 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1925 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1926 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1927 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1928 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1929 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1930 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1931 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1932 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1933 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1934 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1939]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1940]
shader = SubResource( 1938 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1939 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1941]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1942]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1943]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1944]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1945]

[sub_resource type="VisualShaderNodeScalarOp" id=1946]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1947]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1948]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1949]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1950]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1951]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1952]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1953]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1954]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1955]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1952 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1953 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1954 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1941 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1942 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1943 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1944 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1945 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1946 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1947 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1948 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1949 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1950 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1951 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1956]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1957]
shader = SubResource( 1955 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1956 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1958]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1959]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1960]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1961]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1962]

[sub_resource type="VisualShaderNodeScalarOp" id=1963]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1964]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1965]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1966]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1967]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1968]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1969]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1970]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1971]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1972]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1969 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1970 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1971 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1958 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1959 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1960 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1961 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1962 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1963 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1964 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1965 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1966 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1967 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1968 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1973]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1974]
shader = SubResource( 1972 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1973 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1975]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1976]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1977]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1978]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1979]

[sub_resource type="VisualShaderNodeScalarOp" id=1980]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1981]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1982]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=1983]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=1984]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=1985]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=1986]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=1987]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=1988]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=1989]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 1986 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 1987 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 1988 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1975 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1976 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1977 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1978 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1979 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1980 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1981 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1982 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 1983 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 1984 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 1985 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=1990]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=1991]
shader = SubResource( 1989 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 1990 )

[sub_resource type="VisualShaderNodeScalarUniform" id=1992]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=1993]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=1994]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=1995]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=1996]

[sub_resource type="VisualShaderNodeScalarOp" id=1997]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=1998]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=1999]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2000]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2001]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2002]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2003]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2004]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2005]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2006]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2003 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2004 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2005 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 1992 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 1993 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 1994 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 1995 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 1996 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 1997 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 1998 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 1999 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2000 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2001 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2002 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2007]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2008]
shader = SubResource( 2006 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2007 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2009]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2010]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2011]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2012]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2013]

[sub_resource type="VisualShaderNodeScalarOp" id=2014]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2015]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2016]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2017]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2018]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2019]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2020]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2021]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2022]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2023]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2020 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2021 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2022 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2009 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2010 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2011 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2012 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2013 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2014 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2015 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2016 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2017 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2018 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2019 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2024]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2025]
shader = SubResource( 2023 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2024 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2026]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2027]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2028]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2029]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2030]

[sub_resource type="VisualShaderNodeScalarOp" id=2031]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2032]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2033]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2034]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2035]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2036]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2037]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2038]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2039]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2040]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2037 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2038 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2039 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2026 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2027 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2028 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2029 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2030 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2031 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2032 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2033 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2034 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2035 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2036 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2041]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2042]
shader = SubResource( 2040 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2041 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2043]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2044]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2045]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2046]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2047]

[sub_resource type="VisualShaderNodeScalarOp" id=2048]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2049]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2050]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2051]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2052]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2053]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2054]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2055]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2056]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2057]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2054 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2055 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2056 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2043 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2044 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2045 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2046 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2047 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2048 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2049 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2050 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2051 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2052 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2053 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2058]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2059]
shader = SubResource( 2057 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2058 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2060]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2061]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2062]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2063]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2064]

[sub_resource type="VisualShaderNodeScalarOp" id=2065]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2066]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2067]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2068]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2069]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2070]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2071]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2072]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2073]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2074]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2071 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2072 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2073 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2060 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2061 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2062 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2063 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2064 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2065 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2066 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2067 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2068 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2069 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2070 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2075]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2076]
shader = SubResource( 2074 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2075 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2077]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2078]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2079]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2080]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2081]

[sub_resource type="VisualShaderNodeScalarOp" id=2082]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2083]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2084]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2085]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2086]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2087]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2088]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2089]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2090]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2091]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2088 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2089 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2090 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2077 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2078 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2079 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2080 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2081 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2082 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2083 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2084 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2085 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2086 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2087 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2092]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2093]
shader = SubResource( 2091 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2092 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2094]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2095]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2096]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2097]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2098]

[sub_resource type="VisualShaderNodeScalarOp" id=2099]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2100]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2101]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2102]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2103]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2104]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2105]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2106]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2107]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2108]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2105 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2106 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2107 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2094 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2095 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2096 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2097 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2098 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2099 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2100 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2101 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2102 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2103 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2104 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2109]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2110]
shader = SubResource( 2108 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2109 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2111]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2112]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2113]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2114]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2115]

[sub_resource type="VisualShaderNodeScalarOp" id=2116]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2117]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2118]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2119]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2120]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2121]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2122]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2123]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2124]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2125]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2122 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2123 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2124 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2111 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2112 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2113 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2114 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2115 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2116 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2117 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2118 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2119 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2120 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2121 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2126]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2127]
shader = SubResource( 2125 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2126 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2128]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2129]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2130]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2131]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2132]

[sub_resource type="VisualShaderNodeScalarOp" id=2133]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2134]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2135]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2136]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2137]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2138]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2139]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2140]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2141]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2142]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2139 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2140 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2141 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2128 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2129 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2130 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2131 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2132 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2133 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2134 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2135 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2136 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2137 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2138 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2143]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2144]
shader = SubResource( 2142 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2143 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2145]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2146]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2147]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2148]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2149]

[sub_resource type="VisualShaderNodeScalarOp" id=2150]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2151]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2152]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2153]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2154]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2155]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2156]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2157]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2158]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2159]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2156 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2157 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2158 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2145 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2146 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2147 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2148 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2149 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2150 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2151 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2152 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2153 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2154 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2155 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2160]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2161]
shader = SubResource( 2159 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2160 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2162]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2163]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2164]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2165]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2166]

[sub_resource type="VisualShaderNodeScalarOp" id=2167]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2168]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2169]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2170]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2171]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2172]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2173]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2174]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2175]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2176]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2173 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2174 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2175 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2162 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2163 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2164 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2165 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2166 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2167 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2168 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2169 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2170 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2171 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2172 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2177]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2178]
shader = SubResource( 2176 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2177 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2179]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2180]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2181]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2182]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2183]

[sub_resource type="VisualShaderNodeScalarOp" id=2184]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2185]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2186]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2187]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2188]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2189]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2190]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2191]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2192]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2193]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2190 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2191 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2192 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2179 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2180 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2181 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2182 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2183 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2184 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2185 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2186 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2187 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2188 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2189 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2194]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2195]
shader = SubResource( 2193 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2194 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2196]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2197]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2198]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2199]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2200]

[sub_resource type="VisualShaderNodeScalarOp" id=2201]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2202]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2203]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2204]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2205]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2206]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2207]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2208]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2209]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2210]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2207 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2208 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2209 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2196 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2197 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2198 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2199 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2200 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2201 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2202 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2203 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2204 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2205 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2206 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2211]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2212]
shader = SubResource( 2210 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2211 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2213]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2214]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2215]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2216]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2217]

[sub_resource type="VisualShaderNodeScalarOp" id=2218]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2219]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2220]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2221]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2222]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2223]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2224]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2225]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2226]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2227]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2224 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2225 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2226 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2213 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2214 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2215 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2216 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2217 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2218 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2219 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2220 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2221 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2222 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2223 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2228]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2229]
shader = SubResource( 2227 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2228 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2230]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2231]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2232]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2233]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2234]

[sub_resource type="VisualShaderNodeScalarOp" id=2235]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2236]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2237]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2238]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2239]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2240]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2241]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2242]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2243]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2244]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2241 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2242 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2243 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2230 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2231 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2232 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2233 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2234 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2235 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2236 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2237 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2238 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2239 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2240 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2245]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2246]
shader = SubResource( 2244 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2245 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2247]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2248]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2249]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2250]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2251]

[sub_resource type="VisualShaderNodeScalarOp" id=2252]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2253]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2254]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2255]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2256]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2257]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2258]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2259]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2260]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2261]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2258 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2259 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2260 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2247 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2248 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2249 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2250 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2251 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2252 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2253 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2254 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2255 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2256 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2257 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2262]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2263]
shader = SubResource( 2261 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2262 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2264]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2265]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2266]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2267]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2268]

[sub_resource type="VisualShaderNodeScalarOp" id=2269]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2270]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2271]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2272]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2273]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2274]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2275]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2276]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2277]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2278]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2275 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2276 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2277 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2264 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2265 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2266 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2267 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2268 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2269 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2270 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2271 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2272 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2273 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2274 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2279]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2280]
shader = SubResource( 2278 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2279 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2281]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2282]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2283]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2284]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2285]

[sub_resource type="VisualShaderNodeScalarOp" id=2286]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2287]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2288]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2289]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2290]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2291]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2292]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2293]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2294]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2295]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2292 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2293 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2294 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2281 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2282 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2283 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2284 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2285 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2286 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2287 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2288 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2289 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2290 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2291 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2296]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2297]
shader = SubResource( 2295 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2296 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2298]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2299]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2300]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2301]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2302]

[sub_resource type="VisualShaderNodeScalarOp" id=2303]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2304]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2305]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2306]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2307]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2308]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2309]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2310]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2311]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2312]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2309 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2310 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2311 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2298 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2299 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2300 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2301 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2302 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2303 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2304 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2305 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2306 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2307 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2308 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2313]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2314]
shader = SubResource( 2312 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2313 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2315]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2316]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2317]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2318]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2319]

[sub_resource type="VisualShaderNodeScalarOp" id=2320]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2321]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2322]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2323]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2324]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2325]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2326]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2327]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2328]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2329]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2326 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2327 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2328 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2315 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2316 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2317 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2318 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2319 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2320 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2321 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2322 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2323 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2324 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2325 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2330]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2331]
shader = SubResource( 2329 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2330 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2332]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2333]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2334]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2335]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2336]

[sub_resource type="VisualShaderNodeScalarOp" id=2337]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2338]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2339]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2340]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2341]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2342]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2343]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2344]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2345]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2346]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2343 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2344 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2345 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2332 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2333 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2334 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2335 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2336 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2337 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2338 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2339 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2340 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2341 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2342 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2347]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2348]
shader = SubResource( 2346 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2347 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2349]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2350]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2351]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2352]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2353]

[sub_resource type="VisualShaderNodeScalarOp" id=2354]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2355]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2356]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2357]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2358]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2359]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2360]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2361]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2362]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2363]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2360 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2361 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2362 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2349 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2350 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2351 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2352 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2353 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2354 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2355 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2356 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2357 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2358 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2359 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2364]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2365]
shader = SubResource( 2363 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2364 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2366]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2367]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2368]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2369]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2370]

[sub_resource type="VisualShaderNodeScalarOp" id=2371]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2372]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2373]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2374]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2375]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2376]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2377]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2378]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2379]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2380]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2377 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2378 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2379 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2366 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2367 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2368 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2369 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2370 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2371 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2372 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2373 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2374 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2375 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2376 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2381]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2382]
shader = SubResource( 2380 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2381 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2383]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2384]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2385]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2386]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2387]

[sub_resource type="VisualShaderNodeScalarOp" id=2388]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2389]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2390]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2391]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2392]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2393]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2394]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2395]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2396]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2397]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2394 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2395 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2396 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2383 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2384 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2385 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2386 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2387 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2388 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2389 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2390 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2391 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2392 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2393 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2398]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2399]
shader = SubResource( 2397 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2398 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2400]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2401]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2402]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2403]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2404]

[sub_resource type="VisualShaderNodeScalarOp" id=2405]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2406]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2407]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2408]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2409]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2410]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2411]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2412]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2413]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2414]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2411 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2412 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2413 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2400 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2401 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2402 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2403 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2404 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2405 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2406 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2407 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2408 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2409 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2410 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2415]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2416]
shader = SubResource( 2414 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2415 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2417]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2418]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2419]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2420]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2421]

[sub_resource type="VisualShaderNodeScalarOp" id=2422]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2423]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2424]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2425]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2426]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2427]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2428]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2429]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2430]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2431]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2428 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2429 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2430 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2417 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2418 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2419 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2420 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2421 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2422 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2423 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2424 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2425 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2426 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2427 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2432]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2433]
shader = SubResource( 2431 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2432 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2434]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2435]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2436]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2437]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2438]

[sub_resource type="VisualShaderNodeScalarOp" id=2439]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2440]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2441]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2442]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2443]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2444]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2445]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2446]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2447]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2448]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2445 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2446 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2447 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2434 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2435 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2436 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2437 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2438 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2439 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2440 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2441 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2442 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2443 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2444 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2449]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2450]
shader = SubResource( 2448 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2449 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2451]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2452]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2453]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2454]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2455]

[sub_resource type="VisualShaderNodeScalarOp" id=2456]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2457]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2458]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2459]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2460]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2461]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2462]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2463]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2464]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2465]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2462 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2463 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2464 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2451 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2452 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2453 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2454 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2455 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2456 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2457 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2458 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2459 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2460 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2461 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2466]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2467]
shader = SubResource( 2465 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2466 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2468]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2469]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2470]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2471]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2472]

[sub_resource type="VisualShaderNodeScalarOp" id=2473]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2474]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2475]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2476]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2477]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2478]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2479]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2480]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2481]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2482]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2479 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2480 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2481 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2468 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2469 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2470 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2471 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2472 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2473 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2474 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2475 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2476 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2477 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2478 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2483]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2484]
shader = SubResource( 2482 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2483 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2485]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2486]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2487]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2488]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2489]

[sub_resource type="VisualShaderNodeScalarOp" id=2490]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2491]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2492]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2493]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2494]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2495]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2496]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2497]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2498]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2499]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2496 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2497 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2498 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2485 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2486 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2487 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2488 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2489 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2490 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2491 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2492 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2493 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2494 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2495 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2500]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2501]
shader = SubResource( 2499 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2500 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2502]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2503]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2504]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2505]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2506]

[sub_resource type="VisualShaderNodeScalarOp" id=2507]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2508]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2509]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2510]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2511]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2512]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2513]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2514]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2515]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2516]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2513 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2514 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2515 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2502 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2503 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2504 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2505 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2506 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2507 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2508 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2509 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2510 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2511 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2512 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2517]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2518]
shader = SubResource( 2516 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2517 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2519]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2520]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2521]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2522]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2523]

[sub_resource type="VisualShaderNodeScalarOp" id=2524]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2525]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2526]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2527]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2528]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2529]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2530]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2531]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2532]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2533]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2530 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2531 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2532 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2519 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2520 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2521 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2522 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2523 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2524 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2525 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2526 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2527 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2528 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2529 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2534]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2535]
shader = SubResource( 2533 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2534 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2536]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2537]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2538]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2539]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2540]

[sub_resource type="VisualShaderNodeScalarOp" id=2541]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2542]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2543]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2544]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2545]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2546]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2547]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2548]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2549]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2550]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2547 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2548 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2549 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2536 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2537 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2538 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2539 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2540 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2541 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2542 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2543 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2544 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2545 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2546 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2551]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2552]
shader = SubResource( 2550 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2551 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2553]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2554]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2555]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2556]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2557]

[sub_resource type="VisualShaderNodeScalarOp" id=2558]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2559]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2560]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2561]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2562]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2563]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2564]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2565]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2566]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2567]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2564 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2565 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2566 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2553 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2554 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2555 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2556 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2557 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2558 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2559 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2560 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2561 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2562 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2563 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2568]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2569]
shader = SubResource( 2567 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2568 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2570]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2571]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2572]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2573]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2574]

[sub_resource type="VisualShaderNodeScalarOp" id=2575]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2576]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2577]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2578]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2579]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2580]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2581]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2582]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2583]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2584]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2581 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2582 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2583 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2570 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2571 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2572 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2573 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2574 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2575 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2576 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2577 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2578 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2579 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2580 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2585]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2586]
shader = SubResource( 2584 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2585 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2587]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2588]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2589]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2590]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2591]

[sub_resource type="VisualShaderNodeScalarOp" id=2592]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2593]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2594]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2595]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2596]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2597]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2598]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2599]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2600]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2601]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2598 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2599 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2600 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2587 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2588 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2589 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2590 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2591 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2592 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2593 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2594 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2595 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2596 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2597 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2602]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2603]
shader = SubResource( 2601 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2602 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2604]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2605]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2606]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2607]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2608]

[sub_resource type="VisualShaderNodeScalarOp" id=2609]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2610]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2611]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2612]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2613]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2614]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2615]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2616]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2617]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2618]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2615 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2616 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2617 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2604 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2605 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2606 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2607 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2608 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2609 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2610 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2611 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2612 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2613 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2614 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2619]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2620]
shader = SubResource( 2618 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2619 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2621]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2622]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2623]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2624]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2625]

[sub_resource type="VisualShaderNodeScalarOp" id=2626]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2627]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2628]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2629]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2630]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2631]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2632]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2633]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2634]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2635]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2632 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2633 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2634 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2621 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2622 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2623 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2624 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2625 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2626 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2627 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2628 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2629 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2630 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2631 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2636]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2637]
shader = SubResource( 2635 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2636 )

[sub_resource type="VisualShaderNodeScalarUniform" id=2638]
uniform_name = "borderwidth0_1"

[sub_resource type="VisualShaderNodeVectorOp" id=2639]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=2640]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2641]
output_port_for_preview = 0
function = 6

[sub_resource type="VisualShaderNodeVectorDecompose" id=2642]

[sub_resource type="VisualShaderNodeScalarOp" id=2643]
output_port_for_preview = 0
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2644]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2645]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=2646]
function = 31

[sub_resource type="VisualShaderNodeVectorInterp" id=2647]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=2648]
output_port_for_preview = 0
uniform_name = "outlineColor"

[sub_resource type="VisualShaderNodeColorUniform" id=2649]
output_port_for_preview = 0
uniform_name = "textureColor"

[sub_resource type="VisualShaderNodeVectorOp" id=2650]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2651]
output_port_for_preview = 0
uniform_name = "TextureUniform"

[sub_resource type="VisualShader" id=2652]
code = "shader_type spatial;
uniform vec4 outlineColor : hint_color;
uniform vec4 textureColor : hint_color;
uniform sampler2D TextureUniform;
uniform float borderwidth0_1;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:28
	vec3 n_out28p0 = outlineColor.rgb;
	float n_out28p1 = outlineColor.a;

// ColorUniform:4
	vec3 n_out4p0 = textureColor.rgb;
	float n_out4p1 = textureColor.a;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:20
	float n_out20p0 = 0.500000;

// Input:25
	vec3 n_out25p0 = vec3(UV, 0.0);

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out20p0) - n_out25p0;

// VectorFunc:21
	vec3 n_out21p0 = abs(n_out19p0);

// VectorDecompose:22
	float n_out22p0 = n_out21p0.x;
	float n_out22p1 = n_out21p0.y;
	float n_out22p2 = n_out21p0.z;

// ScalarOp:23
	float n_out23p0 = max(n_out22p0, n_out22p1);

// ScalarUniform:17
	float n_out17p0 = borderwidth0_1;

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out17p0;

// ScalarOp:24
	float n_out24p0 = step(n_out23p0, n_out26p0);

// VectorMix:27
	vec3 n_out27p0 = mix(n_out28p0, n_out5p0, vec3(n_out24p0));

// Output:0
	ALBEDO = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 259.8, 208.88 )
nodes/vertex/0/position = Vector2( 460, 240 )
nodes/fragment/0/position = Vector2( 860, 60 )
nodes/fragment/4/node = SubResource( 2649 )
nodes/fragment/4/position = Vector2( -160, 460 )
nodes/fragment/5/node = SubResource( 2650 )
nodes/fragment/5/position = Vector2( 200, 300 )
nodes/fragment/6/node = SubResource( 2651 )
nodes/fragment/6/position = Vector2( -160, 160 )
nodes/fragment/17/node = SubResource( 2638 )
nodes/fragment/17/position = Vector2( -140, -80 )
nodes/fragment/19/node = SubResource( 2639 )
nodes/fragment/19/position = Vector2( 60, -540 )
nodes/fragment/20/node = SubResource( 2640 )
nodes/fragment/20/position = Vector2( -160, -540 )
nodes/fragment/21/node = SubResource( 2641 )
nodes/fragment/21/position = Vector2( 260, -500 )
nodes/fragment/22/node = SubResource( 2642 )
nodes/fragment/22/position = Vector2( 40, -300 )
nodes/fragment/23/node = SubResource( 2643 )
nodes/fragment/23/position = Vector2( 260, -320 )
nodes/fragment/24/node = SubResource( 2644 )
nodes/fragment/24/position = Vector2( 400, -20 )
nodes/fragment/25/node = SubResource( 2645 )
nodes/fragment/25/position = Vector2( -160, -440 )
nodes/fragment/26/node = SubResource( 2646 )
nodes/fragment/26/position = Vector2( 78.0416, -78.4688 )
nodes/fragment/27/node = SubResource( 2647 )
nodes/fragment/27/position = Vector2( 640, 160 )
nodes/fragment/28/node = SubResource( 2648 )
nodes/fragment/28/position = Vector2( 460, 380 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 5, 1, 21, 0, 22, 0, 22, 0, 23, 0, 22, 1, 23, 1, 23, 0, 24, 0, 20, 0, 19, 0, 19, 0, 21, 0, 25, 0, 19, 1, 17, 0, 26, 0, 26, 0, 24, 1, 5, 0, 27, 1, 27, 0, 0, 0, 28, 0, 27, 0, 24, 0, 27, 2 )

[sub_resource type="StreamTexture" id=2653]
flags = 23
load_path = "res://.import/grass_terrain.png-ab3a8800bca67c173e7d3f5ed0293de6.s3tc.stex"

[sub_resource type="ShaderMaterial" id=2654]
shader = SubResource( 2652 )
shader_param/outlineColor = Color( 0.635294, 0.635294, 0.188235, 1 )
shader_param/textureColor = Color( 0.192157, 0.419608, 0.0980392, 1 )
shader_param/borderwidth0_1 = 0.0
shader_param/TextureUniform = SubResource( 2653 )

[node name="Spatial" type="Spatial"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 2 )

[node name="Floor" type="Spatial" parent="."]

[node name="GrassFloor" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, 0.5 )
material_override = SubResource( 19 )
TerrainMaterial = SubResource( 19 )

[node name="GrassFloor2" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, 1.5 )
material_override = SubResource( 36 )
TerrainMaterial = SubResource( 36 )

[node name="GrassFloor3" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, -0.5 )
material_override = SubResource( 53 )
TerrainMaterial = SubResource( 53 )

[node name="GrassFloor4" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, -1.5 )
material_override = SubResource( 70 )
TerrainMaterial = SubResource( 70 )

[node name="GrassFloor104" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, -3.5 )
material_override = SubResource( 87 )
TerrainMaterial = SubResource( 87 )

[node name="GrassFloor130" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, 4.5 )
material_override = SubResource( 104 )
TerrainMaterial = SubResource( 104 )

[node name="GrassFloor5" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, 2.5 )
material_override = SubResource( 121 )
TerrainMaterial = SubResource( 121 )

[node name="GrassFloor233" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, 5.5 )
material_override = SubResource( 138 )
TerrainMaterial = SubResource( 138 )

[node name="GrassFloor6" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, -2.5 )
material_override = SubResource( 155 )
TerrainMaterial = SubResource( 155 )

[node name="GrassFloor103" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, -4.5 )
material_override = SubResource( 172 )
TerrainMaterial = SubResource( 172 )

[node name="GrassFloor351" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, -5.5 )
material_override = SubResource( 189 )
TerrainMaterial = SubResource( 189 )

[node name="GrassFloor129" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 0.5, 0, 3.5 )
material_override = SubResource( 206 )
TerrainMaterial = SubResource( 206 )

[node name="GrassFloor12" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.500732, -6.10352e-05, 0.497681 )
material_override = SubResource( 223 )
TerrainMaterial = SubResource( 223 )

[node name="GrassFloor11" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, 1.5 )
material_override = SubResource( 240 )
TerrainMaterial = SubResource( 240 )

[node name="GrassFloor10" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, -0.5 )
material_override = SubResource( 257 )
TerrainMaterial = SubResource( 257 )

[node name="GrassFloor9" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, -1.5 )
material_override = SubResource( 274 )
TerrainMaterial = SubResource( 274 )

[node name="GrassFloor102" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, -3.5 )
material_override = SubResource( 291 )
TerrainMaterial = SubResource( 291 )

[node name="GrassFloor128" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, 4.5 )
material_override = SubResource( 308 )
TerrainMaterial = SubResource( 308 )

[node name="GrassFloor8" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, 2.5 )
material_override = SubResource( 325 )
TerrainMaterial = SubResource( 325 )

[node name="GrassFloor230" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, 5.5 )
material_override = SubResource( 342 )
TerrainMaterial = SubResource( 342 )

[node name="GrassFloor7" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, -2.5 )
material_override = SubResource( 359 )
TerrainMaterial = SubResource( 359 )

[node name="GrassFloor101" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, -4.5 )
material_override = SubResource( 376 )
TerrainMaterial = SubResource( 376 )

[node name="GrassFloor348" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, -5.5 )
material_override = SubResource( 393 )
TerrainMaterial = SubResource( 393 )

[node name="GrassFloor127" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -0.5, 0, 3.5 )
material_override = SubResource( 410 )
TerrainMaterial = SubResource( 410 )

[node name="GrassFloor18" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, 0.5 )
material_override = SubResource( 427 )
TerrainMaterial = SubResource( 427 )

[node name="GrassFloor17" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, 1.5 )
material_override = SubResource( 444 )
TerrainMaterial = SubResource( 444 )

[node name="GrassFloor16" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, -0.5 )
material_override = SubResource( 461 )
TerrainMaterial = SubResource( 461 )

[node name="GrassFloor15" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, -1.5 )
material_override = SubResource( 478 )
TerrainMaterial = SubResource( 478 )

[node name="GrassFloor100" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, -3.5 )
material_override = SubResource( 495 )
TerrainMaterial = SubResource( 495 )

[node name="GrassFloor126" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, 4.5 )
material_override = SubResource( 512 )
TerrainMaterial = SubResource( 512 )

[node name="GrassFloor14" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, 2.5 )
material_override = SubResource( 529 )
TerrainMaterial = SubResource( 529 )

[node name="GrassFloor227" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, 5.5 )
material_override = SubResource( 546 )
TerrainMaterial = SubResource( 546 )

[node name="GrassFloor13" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, -2.5 )
material_override = SubResource( 563 )
TerrainMaterial = SubResource( 563 )

[node name="GrassFloor99" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, -4.5 )
material_override = SubResource( 580 )
TerrainMaterial = SubResource( 580 )

[node name="GrassFloor345" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, -5.5 )
material_override = SubResource( 597 )
TerrainMaterial = SubResource( 597 )

[node name="GrassFloor125" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -1.5, 0, 3.5 )
material_override = SubResource( 614 )
TerrainMaterial = SubResource( 614 )

[node name="GrassFloor24" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, 0.5 )
material_override = SubResource( 631 )
TerrainMaterial = SubResource( 631 )

[node name="GrassFloor23" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, 1.5 )
material_override = SubResource( 648 )
TerrainMaterial = SubResource( 648 )

[node name="GrassFloor22" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, -0.5 )
material_override = SubResource( 665 )
TerrainMaterial = SubResource( 665 )

[node name="GrassFloor21" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, -1.5 )
material_override = SubResource( 682 )
TerrainMaterial = SubResource( 682 )

[node name="GrassFloor98" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, -3.5 )
material_override = SubResource( 699 )
TerrainMaterial = SubResource( 699 )

[node name="GrassFloor124" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, 4.5 )
material_override = SubResource( 716 )
TerrainMaterial = SubResource( 716 )

[node name="GrassFloor20" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, 2.5 )
material_override = SubResource( 733 )
TerrainMaterial = SubResource( 733 )

[node name="GrassFloor224" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, 5.5 )
material_override = SubResource( 750 )
TerrainMaterial = SubResource( 750 )

[node name="GrassFloor19" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, -2.5 )
material_override = SubResource( 767 )
TerrainMaterial = SubResource( 767 )

[node name="GrassFloor97" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, -4.5 )
material_override = SubResource( 784 )
TerrainMaterial = SubResource( 784 )

[node name="GrassFloor342" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, -5.5 )
material_override = SubResource( 801 )
TerrainMaterial = SubResource( 801 )

[node name="GrassFloor123" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -2.5, 0, 3.5 )
material_override = SubResource( 818 )
TerrainMaterial = SubResource( 818 )

[node name="GrassFloor30" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, 0.5 )
material_override = SubResource( 835 )
TerrainMaterial = SubResource( 835 )

[node name="GrassFloor29" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, 1.5 )
material_override = SubResource( 852 )
TerrainMaterial = SubResource( 852 )

[node name="GrassFloor28" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, -0.5 )
material_override = SubResource( 869 )
TerrainMaterial = SubResource( 869 )

[node name="GrassFloor27" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, -1.5 )
material_override = SubResource( 886 )
TerrainMaterial = SubResource( 886 )

[node name="GrassFloor96" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, -3.5 )
material_override = SubResource( 903 )
TerrainMaterial = SubResource( 903 )

[node name="GrassFloor122" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, 4.5 )
material_override = SubResource( 920 )
TerrainMaterial = SubResource( 920 )

[node name="GrassFloor26" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, 2.5 )
material_override = SubResource( 937 )
TerrainMaterial = SubResource( 937 )

[node name="GrassFloor221" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, 5.5 )
material_override = SubResource( 954 )
TerrainMaterial = SubResource( 954 )

[node name="GrassFloor25" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, -2.5 )
material_override = SubResource( 971 )
TerrainMaterial = SubResource( 971 )

[node name="GrassFloor95" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, -4.5 )
material_override = SubResource( 988 )
TerrainMaterial = SubResource( 988 )

[node name="GrassFloor339" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, -5.5 )
material_override = SubResource( 1005 )
TerrainMaterial = SubResource( 1005 )

[node name="GrassFloor121" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -3.5, 0, 3.5 )
material_override = SubResource( 1022 )
TerrainMaterial = SubResource( 1022 )

[node name="GrassFloor60" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, 0.5 )
material_override = SubResource( 1039 )
TerrainMaterial = SubResource( 1039 )

[node name="GrassFloor59" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, 1.5 )
material_override = SubResource( 1056 )
TerrainMaterial = SubResource( 1056 )

[node name="GrassFloor58" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, -0.5 )
material_override = SubResource( 1073 )
TerrainMaterial = SubResource( 1073 )

[node name="GrassFloor57" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, -1.5 )
material_override = SubResource( 1090 )
TerrainMaterial = SubResource( 1090 )

[node name="GrassFloor94" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, -3.5 )
material_override = SubResource( 1107 )
TerrainMaterial = SubResource( 1107 )

[node name="GrassFloor120" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, 4.5 )
material_override = SubResource( 1124 )
TerrainMaterial = SubResource( 1124 )

[node name="GrassFloor56" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, 2.5 )
material_override = SubResource( 1141 )
TerrainMaterial = SubResource( 1141 )

[node name="GrassFloor218" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, 5.5 )
material_override = SubResource( 1158 )
TerrainMaterial = SubResource( 1158 )

[node name="GrassFloor55" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, -2.5 )
material_override = SubResource( 1175 )
TerrainMaterial = SubResource( 1175 )

[node name="GrassFloor93" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, -4.5 )
material_override = SubResource( 1192 )
TerrainMaterial = SubResource( 1192 )

[node name="GrassFloor336" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, -5.5 )
material_override = SubResource( 1209 )
TerrainMaterial = SubResource( 1209 )

[node name="GrassFloor119" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, -4.5, 0, 3.5 )
material_override = SubResource( 1226 )
TerrainMaterial = SubResource( 1226 )

[node name="GrassFloor78" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, 0.5 )
material_override = SubResource( 1243 )
TerrainMaterial = SubResource( 1243 )

[node name="GrassFloor77" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, 1.5 )
material_override = SubResource( 1260 )
TerrainMaterial = SubResource( 1260 )

[node name="GrassFloor76" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, -0.5 )
material_override = SubResource( 1277 )
TerrainMaterial = SubResource( 1277 )

[node name="GrassFloor75" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, -1.5 )
material_override = SubResource( 1294 )
TerrainMaterial = SubResource( 1294 )

[node name="GrassFloor88" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, -3.5 )
material_override = SubResource( 1311 )
TerrainMaterial = SubResource( 1311 )

[node name="GrassFloor114" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, 4.5 )
material_override = SubResource( 1328 )
TerrainMaterial = SubResource( 1328 )

[node name="GrassFloor74" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, 2.5 )
material_override = SubResource( 1345 )
TerrainMaterial = SubResource( 1345 )

[node name="GrassFloor209" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, 5.5 )
material_override = SubResource( 1362 )
TerrainMaterial = SubResource( 1362 )

[node name="GrassFloor73" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, -2.5 )
material_override = SubResource( 1379 )
TerrainMaterial = SubResource( 1379 )

[node name="GrassFloor87" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, -4.5 )
material_override = SubResource( 1396 )
TerrainMaterial = SubResource( 1396 )

[node name="GrassFloor315" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, -5.5 )
material_override = SubResource( 1413 )
TerrainMaterial = SubResource( 1413 )

[node name="GrassFloor113" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 4.5, 0, 3.5 )
material_override = SubResource( 1430 )
TerrainMaterial = SubResource( 1430 )

[node name="GrassFloor72" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, 0.5 )
material_override = SubResource( 1447 )
TerrainMaterial = SubResource( 1447 )

[node name="GrassFloor71" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, 1.5 )
material_override = SubResource( 1464 )
TerrainMaterial = SubResource( 1464 )

[node name="GrassFloor70" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, -0.5 )
material_override = SubResource( 1481 )
TerrainMaterial = SubResource( 1481 )

[node name="GrassFloor69" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, -1.5 )
material_override = SubResource( 1498 )
TerrainMaterial = SubResource( 1498 )

[node name="GrassFloor86" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, -3.5 )
material_override = SubResource( 1515 )
TerrainMaterial = SubResource( 1515 )

[node name="GrassFloor112" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, 4.5 )
material_override = SubResource( 1532 )
TerrainMaterial = SubResource( 1532 )

[node name="GrassFloor68" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, 2.5 )
material_override = SubResource( 1549 )
TerrainMaterial = SubResource( 1549 )

[node name="GrassFloor206" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, 5.5 )
material_override = SubResource( 1566 )
TerrainMaterial = SubResource( 1566 )

[node name="GrassFloor67" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, -2.5 )
material_override = SubResource( 1583 )
TerrainMaterial = SubResource( 1583 )

[node name="GrassFloor85" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, -4.5 )
material_override = SubResource( 1600 )
TerrainMaterial = SubResource( 1600 )

[node name="GrassFloor312" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, -5.5 )
material_override = SubResource( 1617 )
TerrainMaterial = SubResource( 1617 )

[node name="GrassFloor111" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 3.5, 0, 3.5 )
material_override = SubResource( 1634 )
TerrainMaterial = SubResource( 1634 )

[node name="GrassFloor66" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, 0.5 )
material_override = SubResource( 1651 )
TerrainMaterial = SubResource( 1651 )

[node name="GrassFloor65" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, 1.5 )
material_override = SubResource( 1668 )
TerrainMaterial = SubResource( 1668 )

[node name="GrassFloor64" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, -0.5 )
material_override = SubResource( 1685 )
TerrainMaterial = SubResource( 1685 )

[node name="GrassFloor63" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, -1.5 )
material_override = SubResource( 1702 )
TerrainMaterial = SubResource( 1702 )

[node name="GrassFloor84" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, -3.5 )
material_override = SubResource( 1719 )
TerrainMaterial = SubResource( 1719 )

[node name="GrassFloor110" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, 4.5 )
material_override = SubResource( 1736 )
TerrainMaterial = SubResource( 1736 )

[node name="GrassFloor62" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, 2.5 )
material_override = SubResource( 1753 )
TerrainMaterial = SubResource( 1753 )

[node name="GrassFloor203" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, 5.5 )
material_override = SubResource( 1770 )
TerrainMaterial = SubResource( 1770 )

[node name="GrassFloor61" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, -2.5 )
material_override = SubResource( 1787 )
TerrainMaterial = SubResource( 1787 )

[node name="GrassFloor83" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, -4.5 )
material_override = SubResource( 1804 )
TerrainMaterial = SubResource( 1804 )

[node name="GrassFloor309" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, -5.5 )
material_override = SubResource( 1821 )
TerrainMaterial = SubResource( 1821 )

[node name="GrassFloor109" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 2.5, 0, 3.5 )
material_override = SubResource( 1838 )
TerrainMaterial = SubResource( 1838 )

[node name="GrassFloor36" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 0.5 )
material_override = SubResource( 1855 )
TerrainMaterial = SubResource( 1855 )

[node name="GrassFloor35" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 1.5 )
material_override = SubResource( 1872 )
TerrainMaterial = SubResource( 1872 )

[node name="GrassFloor34" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -0.5 )
material_override = SubResource( 1889 )
TerrainMaterial = SubResource( 1889 )

[node name="GrassFloor33" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -1.5 )
material_override = SubResource( 1906 )
TerrainMaterial = SubResource( 1906 )

[node name="GrassFloor82" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -3.5 )
material_override = SubResource( 1923 )
TerrainMaterial = SubResource( 1923 )

[node name="GrassFloor108" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 4.5 )
material_override = SubResource( 1940 )
TerrainMaterial = SubResource( 1940 )

[node name="GrassFloor32" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 2.5 )
material_override = SubResource( 1957 )
TerrainMaterial = SubResource( 1957 )

[node name="GrassFloor200" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 5.5 )
material_override = SubResource( 1974 )
TerrainMaterial = SubResource( 1974 )

[node name="GrassFloor31" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -2.5 )
material_override = SubResource( 1991 )
TerrainMaterial = SubResource( 1991 )

[node name="GrassFloor81" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -4.5 )
material_override = SubResource( 2008 )
TerrainMaterial = SubResource( 2008 )

[node name="GrassFloor306" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -5.5 )
material_override = SubResource( 2025 )
TerrainMaterial = SubResource( 2025 )

[node name="GrassFloor107" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 3.5 )
material_override = SubResource( 2042 )
TerrainMaterial = SubResource( 2042 )

[node name="GrassFloor42" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 0.5 )
material_override = SubResource( 2059 )
TerrainMaterial = SubResource( 2059 )

[node name="GrassFloor41" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 1.5 )
material_override = SubResource( 2076 )
TerrainMaterial = SubResource( 2076 )

[node name="GrassFloor40" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -0.5 )
material_override = SubResource( 2093 )
TerrainMaterial = SubResource( 2093 )

[node name="GrassFloor39" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -1.5 )
material_override = SubResource( 2110 )
TerrainMaterial = SubResource( 2110 )

[node name="GrassFloor80" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -3.5 )
material_override = SubResource( 2127 )
TerrainMaterial = SubResource( 2127 )

[node name="GrassFloor106" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 4.5 )
material_override = SubResource( 2144 )
TerrainMaterial = SubResource( 2144 )

[node name="GrassFloor38" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 2.5 )
material_override = SubResource( 2161 )
TerrainMaterial = SubResource( 2161 )

[node name="GrassFloor197" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 5.5 )
material_override = SubResource( 2178 )
TerrainMaterial = SubResource( 2178 )

[node name="GrassFloor37" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -2.5 )
material_override = SubResource( 2195 )
TerrainMaterial = SubResource( 2195 )

[node name="GrassFloor79" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -4.5 )
material_override = SubResource( 2212 )
TerrainMaterial = SubResource( 2212 )

[node name="GrassFloor303" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, -5.5 )
material_override = SubResource( 2229 )
TerrainMaterial = SubResource( 2229 )

[node name="GrassFloor105" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 1.5, 0, 3.5 )
material_override = SubResource( 2246 )
TerrainMaterial = SubResource( 2246 )

[node name="GrassFloor150" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 0.5 )
material_override = SubResource( 2263 )
TerrainMaterial = SubResource( 2263 )

[node name="GrassFloor149" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 1.5 )
material_override = SubResource( 2280 )
TerrainMaterial = SubResource( 2280 )

[node name="GrassFloor148" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -0.5 )
material_override = SubResource( 2297 )
TerrainMaterial = SubResource( 2297 )

[node name="GrassFloor147" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -1.5 )
material_override = SubResource( 2314 )
TerrainMaterial = SubResource( 2314 )

[node name="GrassFloor146" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -3.5 )
material_override = SubResource( 2331 )
TerrainMaterial = SubResource( 2331 )

[node name="GrassFloor145" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 4.5 )
material_override = SubResource( 2348 )
TerrainMaterial = SubResource( 2348 )

[node name="GrassFloor144" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 2.5 )
material_override = SubResource( 2365 )
TerrainMaterial = SubResource( 2365 )

[node name="GrassFloor185" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 5.5 )
material_override = SubResource( 2382 )
TerrainMaterial = SubResource( 2382 )

[node name="GrassFloor143" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -2.5 )
material_override = SubResource( 2399 )
TerrainMaterial = SubResource( 2399 )

[node name="GrassFloor142" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -4.5 )
material_override = SubResource( 2416 )
TerrainMaterial = SubResource( 2416 )

[node name="GrassFloor291" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -5.5 )
material_override = SubResource( 2433 )
TerrainMaterial = SubResource( 2433 )

[node name="GrassFloor141" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 3.5 )
material_override = SubResource( 2450 )
TerrainMaterial = SubResource( 2450 )

[node name="GrassFloor140" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 0.5 )
material_override = SubResource( 2467 )
TerrainMaterial = SubResource( 2467 )

[node name="GrassFloor139" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 1.5 )
material_override = SubResource( 2484 )
TerrainMaterial = SubResource( 2484 )

[node name="GrassFloor138" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -0.5 )
material_override = SubResource( 2501 )
TerrainMaterial = SubResource( 2501 )

[node name="GrassFloor137" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -1.5 )
material_override = SubResource( 2518 )
TerrainMaterial = SubResource( 2518 )

[node name="GrassFloor136" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -3.5 )
material_override = SubResource( 2535 )
TerrainMaterial = SubResource( 2535 )

[node name="GrassFloor135" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 4.5 )
material_override = SubResource( 2552 )
TerrainMaterial = SubResource( 2552 )

[node name="GrassFloor134" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 2.5 )
material_override = SubResource( 2569 )
TerrainMaterial = SubResource( 2569 )

[node name="GrassFloor182" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 5.5 )
material_override = SubResource( 2586 )
TerrainMaterial = SubResource( 2586 )

[node name="GrassFloor133" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -2.5 )
material_override = SubResource( 2603 )
TerrainMaterial = SubResource( 2603 )

[node name="GrassFloor132" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -4.5 )
material_override = SubResource( 2620 )
TerrainMaterial = SubResource( 2620 )

[node name="GrassFloor288" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, -5.5 )
material_override = SubResource( 2637 )
TerrainMaterial = SubResource( 2637 )

[node name="GrassFloor131" parent="Floor" instance=ExtResource( 1 )]
transform = Transform( 1, 0, 0, 0, 0.792564, 0, 0, 0, 1, 5.5, 0, 3.5 )
material_override = SubResource( 2654 )
TerrainMaterial = SubResource( 2654 )

[node name="Player" parent="." instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0.08, -0.5 )
input_ray_pickable = false

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, -0.740019, 0.672586, 0, -0.672586, -0.740019, 0, 2, 0.5597 )
